{"version":3,"sources":["components/languageswitcher.js","components/navbar.js","utils/ScrollToTop.js","App.js","i18n/index.js","serviceWorker.js","index.js","constants.js","utils/commonfunctions.js"],"names":["LanguageSwitcher","useLocalStorage","language","setLanguage","i18n","useTranslation","useEffect","changeLanguage","className","as","locales","Modal","List","Object","entries","map","key","Item","onClick","activeNavIcon","path","style","stroke","window","location","pathname","Expand","expand","pages","setExpand","darkMode","setIsThemeSet","setDarkMode","expandElement","useRef","t","useEffectOnce","anime","targets","current","translateX","easing","duration","ref","onMouseLeave","page","i","showInNavbar","to","pageLink","animationDelay","animationDelayForNavbar","displayName","innerWidth","prevMode","color","Navbar","useState","useLockBodyScroll","windowSize","useWindowSize","onMouseEnter","width","Fragment","ScrollToTop","useLocation","scrollTo","Home","lazy","DeepDive","Demographics","State","Essentials","schemaMarkup","name","alternateName","url","image","App","view","isThemeSet","matchMedia","matches","React","document","querySelector","classList","add","remove","Helmet","type","JSON","stringify","fallback","render","index","exact","match","params","stateCode","use","Backend","LanguageDetector","initReactI18next","init","debug","isDevelopmentOrTest","lng","fallbackLng","keySeparator","returnEmptyString","backend","loadPath","addPath","saveMissing","interpolation","escapeValue","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","STATE_ROW_STATISTICS","DISTRICT_ROW_STATISTICS","MAP_TYPES","COUNTRY","STATE","DISTRICT","MAP_STATISTICS","TOTAL","PER_MILLION","ZONE","HOTSPOTS","MAP_VIEWS","STATES","DISTRICTS","MAPS_DIR","MAP_META","India","geoDataFile","mapType","graphObjectStates","graphObjectDistricts","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","STATE_CODES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","JK","LA","LD","PY","stateCodes","reverseStateCodes","keys","push","code","STATE_CODES_REVERSE","STATE_CODES_ARRAY","STATE_POPULATIONS","Total","RAW_DATA_PARTITIONS","v1","start","Date","end","v2","v3","v4","LOCALE_SHORTHANDS","english","hindi","hi","telugu","te","kannada","gujarati","gu","marathi","tamil","ta","bengali","bn","punjabi","malayalam","odiya","ESSENTIALS_CATEGORIES","Ambulance","Fundraisers","Police","Transportation","Other","getStateName","toUpperCase","getIndiaDay","startOfDay","utcToZonedTime","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","format","parse","locale","formatDayMonth","formatLastUpdated","formatDistance","formatTimeseriesDate","formatTimeseriesTickX","preprocessTimeseries","timeseries","data","dataTypes","filter","d","every","dt","date","Number","today","isBefore","validateCTS","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","totalactive","dailyactive","sliceTimeseriesFromEnd","days","formatNumber","value","numberFormatter","Intl","NumberFormat","isNaN","parseStateTimeseries","states_daily","statewiseSeries","reduce","a","c","forEach","k","v","toLowerCase","prev","length","parseStateTestData","reversed","reverse","ret","obj","find","totaltested","source","source1","source2","updatedon","parseStateTestTimeseries","testTimseries","sc","dailytested","stateTs","differenceInDays","NaN","parseTotalTestTimeseries","updatetimestamp","split","totalsamplestested","isSameDay","mergeTimeseries","ts1","ts2","tsRet","assign","hasOwnProperty","d1","testData","d2","capitalize","s","charAt","capitalizeAll","str","join","abbreviate","replace","parseDistrictZones","zones","district","values"],"mappings":"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","file":"static/js/main.2b48d5c1.chunk.js","sourcesContent":["import locales from '../i18n/locales.json';\r\n\r\nimport Button from '@primer/components/lib/Button';\r\nimport SelectMenu from '@primer/components/lib/SelectMenu';\r\nimport React, {useEffect} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useLocalStorage} from 'react-use';\r\n\r\nexport default function LanguageSwitcher() {\r\n  const [language, setLanguage] = useLocalStorage('language', 'english');\r\n  const {i18n} = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (i18n) i18n.changeLanguage(language);\r\n  }, [i18n, language]);\r\n\r\n  return (\r\n    <div className=\"LanguageSwitcher\">\r\n      <SelectMenu>\r\n        <Button as=\"summary\" className=\"button\">\r\n          {locales[language]}\r\n        </Button>\r\n        <SelectMenu.Modal className=\"select-menu-modal\">\r\n          <SelectMenu.List className=\"select-menu-list\">\r\n            {Object.entries(locales).map(([key, language]) => (\r\n              <SelectMenu.Item\r\n                key={key}\r\n                className=\"select-menu-item\"\r\n                onClick={() => {\r\n                  setLanguage(key);\r\n                }}\r\n              >\r\n                {language}\r\n              </SelectMenu.Item>\r\n            ))}\r\n          </SelectMenu.List>\r\n        </SelectMenu.Modal>\r\n      </SelectMenu>\r\n    </div>\r\n  );\r\n}\r\n","import LanguageSwitcher from './languageswitcher';\r\n\r\nimport anime from 'animejs';\r\nimport React, {useState, useRef} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n  useEffectOnce,\r\n  useLockBodyScroll,\r\n  useWindowSize,\r\n  useLocalStorage,\r\n} from 'react-use';\r\n\r\nconst navLinkProps = (path, animationDelay) => ({\r\n  className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\r\n  style: {\r\n    animationDelay: `${animationDelay}s`,\r\n  },\r\n});\r\n\r\nconst activeNavIcon = (path) => ({\r\n  style: {\r\n    stroke: window.location.pathname === path ? '#4c75f2' : '',\r\n  },\r\n});\r\n\r\nfunction Navbar({pages, darkMode, setDarkMode}) {\r\n  const [expand, setExpand] = useState(false);\r\n  // eslint-disable-next-line\r\n  const [isThemeSet, setIsThemeSet] = useLocalStorage('isThemeSet', false);\r\n  const {t} = useTranslation();\r\n\r\n  useLockBodyScroll(expand);\r\n  const windowSize = useWindowSize();\r\n\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <LanguageSwitcher />\r\n      {window.innerWidth > 769 && (\r\n        <div\r\n          className=\"navbar-left\"\r\n          onClick={() => {\r\n            setDarkMode((prevMode) => !prevMode);\r\n            setIsThemeSet(true);\r\n          }}\r\n        >\r\n          {darkMode ? <Icon.Sun color={'#ffc107'} /> : <Icon.Moon />}\r\n        </div>\r\n      )}\r\n      <div className=\"navbar-middle\">\r\n        <Link\r\n          to=\"/\"\r\n          onClick={() => {\r\n            setExpand(false);\r\n          }}\r\n        >\r\n          Covid19<span>India</span>\r\n        </Link>\r\n      </div>\r\n\r\n      <div\r\n        className=\"navbar-right\"\r\n        onClick={() => {\r\n          setExpand(!expand);\r\n        }}\r\n        onMouseEnter={() => {\r\n          if (window.innerWidth > 769) {\r\n            setExpand(true);\r\n          }\r\n        }}\r\n      >\r\n        {windowSize.width < 769 && (\r\n          <span>{expand ? t('Close') : t('Menu')}</span>\r\n        )}\r\n        {windowSize.width > 769 && (\r\n          <React.Fragment>\r\n            <span>\r\n              <Link to=\"/\">\r\n                <Icon.Home {...activeNavIcon('/')} />\r\n              </Link>\r\n            </span>\r\n            <span>\r\n              <Link to=\"/demographics\">\r\n                <Icon.Users {...activeNavIcon('/demographics')} />\r\n              </Link>\r\n            </span>\r\n            <span>\r\n              <Link to=\"/deepdive\">\r\n                <Icon.BarChart2 {...activeNavIcon('/deepdive')} />\r\n              </Link>\r\n            </span>\r\n            <span>\r\n              <Link to=\"/essentials\">\r\n                <Icon.Package {...activeNavIcon('/essentials')} />\r\n              </Link>\r\n            </span>\r\n            <span>\r\n              <Link to=\"/about\">\r\n                <Icon.HelpCircle {...activeNavIcon('/about')} />\r\n              </Link>\r\n            </span>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n\r\n      {expand && (\r\n        <Expand\r\n          expand={expand}\r\n          pages={pages}\r\n          setExpand={setExpand}\r\n          darkMode={darkMode}\r\n          setIsThemeSet={setIsThemeSet}\r\n          setDarkMode={setDarkMode}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Expand({\r\n  expand,\r\n  pages,\r\n  setExpand,\r\n  darkMode,\r\n  setIsThemeSet,\r\n  setDarkMode,\r\n}) {\r\n  const expandElement = useRef(null);\r\n  const {t} = useTranslation();\r\n\r\n  useEffectOnce(() => {\r\n    anime({\r\n      targets: expandElement.current,\r\n      translateX: '10.5rem',\r\n      easing: 'easeOutExpo',\r\n      duration: 250,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"expand\"\r\n      ref={expandElement}\r\n      onMouseLeave={() => {\r\n        setExpand(false);\r\n      }}\r\n    >\r\n      {pages.map((page, i) => {\r\n        if (page.showInNavbar === true) {\r\n          return (\r\n            <Link\r\n              to={page.pageLink}\r\n              key={i}\r\n              onClick={() => {\r\n                setExpand(false);\r\n              }}\r\n            >\r\n              <span\r\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\r\n              >\r\n                {t(page.displayName)}\r\n              </span>\r\n            </Link>\r\n          );\r\n        }\r\n        return null;\r\n      })}\r\n\r\n      {window.innerWidth < 768 && (\r\n        <div\r\n          className=\"fadeInUp\"\r\n          style={{animationDelay: '0.9s'}}\r\n          onClick={() => {\r\n            setDarkMode((prevMode) => !prevMode);\r\n            setIsThemeSet(true);\r\n          }}\r\n        >\r\n          <div>{darkMode ? <Icon.Sun color={'#ffc107'} /> : <Icon.Moon />}</div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"expand-bottom fadeInUp\" style={{animationDelay: '1s'}}>\r\n        <h5>{t('A crowdsourced initiative.')}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nexport default function ScrollToTop() {\r\n  const {pathname} = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import Navbar from './components/navbar';\r\nimport ScrollToTop from './utils/ScrollToTop';\r\n\r\nimport React, {Suspense, lazy} from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport {useLocalStorage, useEffectOnce} from 'react-use';\r\nimport './App.scss';\r\n\r\nconst Home = lazy(() =>\r\n  import('./components/home' /* webpackChunkName: \"Home\" */)\r\n);\r\nconst DeepDive = lazy(() =>\r\n  import('./components/deepdive' /* webpackChunkName: \"DeepDive\" */)\r\n);\r\nconst FAQ = lazy(() =>\r\n  import('./components/faq' /* webpackChunkName: \"FAQ\" */)\r\n);\r\nconst Demographics = lazy(() =>\r\n  import('./components/demographics' /* webpackChunkName: \"PatientDB\" */)\r\n);\r\nconst State = lazy(() =>\r\n  import('./components/state' /* webpackChunkName: \"State\" */)\r\n);\r\nconst Essentials = lazy(() =>\r\n  import('./components/essentials' /* webpackChunkName: \"Essentials\" */)\r\n);\r\n\r\nconst schemaMarkup = {\r\n  '@context': 'http://schema.org/',\r\n  '@type': 'NGO',\r\n  name: 'Coronavirus Outbreak in India: Latest Map and Case Count',\r\n  alternateName: 'COVID-19 Tracker',\r\n  url: 'https://www.covid19india.org/',\r\n  image: 'https://www.covid19india.org/thumbnail.png',\r\n};\r\n\r\nfunction App() {\r\n  const {t} = useTranslation();\r\n\r\n  const pages = [\r\n    {\r\n      pageLink: '/',\r\n      view: Home,\r\n      displayName: 'Home',\r\n      animationDelayForNavbar: 0.2,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/demographics',\r\n      view: Demographics,\r\n      displayName: t('Demographics'),\r\n      animationDelayForNavbar: 0.3,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/deepdive',\r\n      view: DeepDive,\r\n      displayName: t('Deep Dive'),\r\n      animationDelayForNavbar: 0.4,\r\n      showInNavbar: true,\r\n    },\r\n    {\r\n      pageLink: '/essentials',\r\n      view: Essentials,\r\n      displayName: t('Essentials'),\r\n      animationDelayForNavbar: 0.5,\r\n      showInNavbar: true,\r\n    },\r\n\r\n    {\r\n      pageLink: '/state/:stateCode',\r\n      view: State,\r\n      displayName: t('State'),\r\n      animationDelayForNavbar: 0.7,\r\n      showInNavbar: false,\r\n    },\r\n  ];\r\n\r\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\r\n  const [isThemeSet] = useLocalStorage('isThemeSet', false);\r\n\r\n  useEffectOnce(() => {\r\n    if (\r\n      window.matchMedia &&\r\n      window.matchMedia('(prefers-color-scheme: dark)').matches &&\r\n      !isThemeSet\r\n    ) {\r\n      setDarkMode(true);\r\n    } else if (\r\n      window.matchMedia &&\r\n      !window.matchMedia('(prefers-color-scheme: dark)').matches &&\r\n      !isThemeSet\r\n    ) {\r\n      setDarkMode(false);\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (darkMode) {\r\n      document.querySelector('body').classList.add('dark-mode');\r\n    } else {\r\n      document.querySelector('body').classList.remove('dark-mode');\r\n    }\r\n  }, [darkMode]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Helmet>\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaMarkup)}\r\n        </script>\r\n      </Helmet>\r\n\r\n      <Router>\r\n        <ScrollToTop />\r\n        <Suspense fallback={<div className=\"lazy\"></div>}>\r\n          <Route\r\n            render={({location}) => (\r\n              <React.Fragment>\r\n                <Navbar\r\n                  pages={pages}\r\n                  darkMode={darkMode}\r\n                  setDarkMode={setDarkMode}\r\n                />\r\n                <Switch location={location}>\r\n                  {pages.map((page, index) => {\r\n                    return (\r\n                      <Route\r\n                        exact\r\n                        path={page.pageLink}\r\n                        render={({match}) => (\r\n                          <page.view key={match.params.stateCode || index} />\r\n                        )}\r\n                        key={index}\r\n                      />\r\n                    );\r\n                  })}\r\n                  <Redirect to=\"/\" />\r\n                </Switch>\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n        </Suspense>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {isDevelopmentOrTest} from '../utils/commonfunctions';\r\n\r\nimport i18n from 'i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport Backend from 'i18next-http-backend';\r\nimport {initReactI18next} from 'react-i18next';\r\n\r\nconst DEBUG = true;\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    debug: isDevelopmentOrTest() && DEBUG,\r\n    lng: 'english',\r\n    fallbackLng: 'english',\r\n    keySeparator: false,\r\n    returnEmptyString: false,\r\n    backend: {\r\n      loadPath: 'https://api.covid19india.org/locales/locale_{{lng}}.json',\r\n      addPath: 'http://localhost:9999/',\r\n    },\r\n    saveMissing: isDevelopmentOrTest() && DEBUG,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'},\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import App from './App';\r\nimport './i18n';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport React, {Suspense} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nReactDOM.render(\r\n  <Suspense fallback={''}>\r\n    <App />\r\n  </Suspense>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import {hi, te, gu, ta, bn} from 'date-fns/locale/';\r\n\r\nexport const STATE_ROW_STATISTICS = [\r\n  'confirmed',\r\n  'active',\r\n  'recovered',\r\n  'deaths',\r\n];\r\nexport const DISTRICT_ROW_STATISTICS = [\r\n  'confirmed',\r\n  'active',\r\n  'recovered',\r\n  'deceased',\r\n];\r\n\r\nexport const MAP_TYPES = {\r\n  COUNTRY: 'country',\r\n  STATE: 'state',\r\n  DISTRICT: 'district',\r\n};\r\n\r\nexport const MAP_STATISTICS = {\r\n  TOTAL: 0,\r\n  PER_MILLION: 1,\r\n  ZONE: 2,\r\n  HOTSPOTS: 3,\r\n};\r\n\r\nexport const MAP_VIEWS = {\r\n  STATES: 0,\r\n  DISTRICTS: 1,\r\n};\r\n\r\nexport const MAPS_DIR =\r\n  process.env.NODE_ENV === 'production' ? '/mini_maps' : '/maps';\r\n\r\nexport const MAP_META = {\r\n  India: {\r\n    geoDataFile: `${MAPS_DIR}/india.json`,\r\n    mapType: MAP_TYPES.COUNTRY,\r\n    graphObjectStates: 'india-states',\r\n    graphObjectDistricts: 'india-districts-2019-734',\r\n  },\r\n  'Andaman and Nicobar Islands': {\r\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'andamannicobarislands_district',\r\n  },\r\n  'Arunachal Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'arunachalpradesh_district',\r\n  },\r\n  'Andhra Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'andhrapradesh_district',\r\n  },\r\n  Assam: {\r\n    geoDataFile: `${MAPS_DIR}/assam.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'assam_district',\r\n  },\r\n  Bihar: {\r\n    name: 'Bihar',\r\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'bihar_district',\r\n  },\r\n  Chandigarh: {\r\n    name: 'Chandigarh',\r\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'chandigarh_district',\r\n  },\r\n  Chhattisgarh: {\r\n    name: 'Chhattisgarh',\r\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'chhattisgarh_district',\r\n  },\r\n  'Dadra and Nagar Haveli and Daman and Diu': {\r\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'dnh-and-dd',\r\n  },\r\n  Delhi: {\r\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'delhi_district',\r\n  },\r\n  Karnataka: {\r\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'karnataka_district',\r\n  },\r\n  Kerala: {\r\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'kerala_district',\r\n  },\r\n  Goa: {\r\n    geoDataFile: `${MAPS_DIR}/goa.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'goa_district',\r\n  },\r\n  Gujarat: {\r\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'gujarat_district',\r\n  },\r\n  Haryana: {\r\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'haryana_district',\r\n  },\r\n  'Himachal Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'himachalpradesh_district',\r\n  },\r\n  'Jammu and Kashmir': {\r\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'jammukashmir_district',\r\n  },\r\n  Jharkhand: {\r\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'jharkhand_district',\r\n  },\r\n  Ladakh: {\r\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'ladakh_district',\r\n  },\r\n  Lakshadweep: {\r\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'lakshadweep_district',\r\n  },\r\n  'Madhya Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'madhyapradesh_district',\r\n  },\r\n  Maharashtra: {\r\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'maharashtra_district',\r\n  },\r\n  Manipur: {\r\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'manipur_district',\r\n  },\r\n  Meghalaya: {\r\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'meghalaya_district',\r\n  },\r\n  Mizoram: {\r\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'mizoram_district',\r\n  },\r\n  Nagaland: {\r\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'nagaland_district',\r\n  },\r\n  Odisha: {\r\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'odisha_district',\r\n  },\r\n  Puducherry: {\r\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'puducherry_district',\r\n  },\r\n  Punjab: {\r\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'punjab_district',\r\n  },\r\n  Rajasthan: {\r\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'rajasthan_district',\r\n  },\r\n  Sikkim: {\r\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'sikkim_district',\r\n  },\r\n  'Tamil Nadu': {\r\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'tamilnadu_district',\r\n  },\r\n  Telangana: {\r\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'telangana_district',\r\n  },\r\n  Tripura: {\r\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'tripura_district',\r\n  },\r\n  Uttarakhand: {\r\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'uttarakhand_district',\r\n  },\r\n  'Uttar Pradesh': {\r\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'uttarpradesh_district',\r\n  },\r\n\r\n  'West Bengal': {\r\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectDistricts: 'westbengal_district',\r\n  },\r\n};\r\n\r\nexport const STATE_CODES = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n};\r\n\r\nconst stateCodes = [];\r\nconst reverseStateCodes = {};\r\nObject.keys(STATE_CODES).map((key, index) => {\r\n  reverseStateCodes[STATE_CODES[key]] = key;\r\n  stateCodes.push({code: key, name: STATE_CODES[key]});\r\n  return null;\r\n});\r\nexport const STATE_CODES_REVERSE = reverseStateCodes;\r\nexport const STATE_CODES_ARRAY = stateCodes;\r\n\r\n// Source: Projected Populations (2019)\r\n// National Commission on Population, \"Population Projections for India and\r\n// States (2011-2036)\", Table-8 (p43), November 2019\r\n// https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\r\nexport const STATE_POPULATIONS = {\r\n  'Andaman and Nicobar Islands': 397000,\r\n  'Andhra Pradesh': 52221000,\r\n  'Arunachal Pradesh': 1504000,\r\n  Assam: 34293000,\r\n  Bihar: 119520000,\r\n  Chandigarh: 1179000,\r\n  Chhattisgarh: 28724000,\r\n  'Dadra and Nagar Haveli and Daman and Diu': 959000,\r\n  Delhi: 19814000,\r\n  Goa: 1540000,\r\n  Gujarat: 67936000,\r\n  Haryana: 28672000,\r\n  'Himachal Pradesh': 7300000,\r\n  'Jammu and Kashmir': 13203000,\r\n  Jharkhand: 37403000,\r\n  Karnataka: 65798000,\r\n  Kerala: 35125000,\r\n  Ladakh: 293000,\r\n  Lakshadweep: 68000,\r\n  'Madhya Pradesh': 82232000,\r\n  Maharashtra: 122153000,\r\n  Manipur: 3103000,\r\n  Meghalaya: 3224000,\r\n  Mizoram: 1192000,\r\n  Nagaland: 2150000,\r\n  Odisha: 43671000,\r\n  Puducherry: 1504000,\r\n  Punjab: 29859000,\r\n  Rajasthan: 77264000,\r\n  Sikkim: 664000,\r\n  'Tamil Nadu': 75695000,\r\n  Telangana: 37220000,\r\n  Tripura: 3992000,\r\n  'Uttar Pradesh': 224979000,\r\n  Uttarakhand: 11141000,\r\n  'West Bengal': 96906000,\r\n  Total: 1332900000,\r\n};\r\n\r\nexport const RAW_DATA_PARTITIONS = {\r\n  v1: {\r\n    start: new Date(2020, 0, 1),\r\n    end: new Date(2020, 3, 19),\r\n  },\r\n  v2: {\r\n    start: new Date(2020, 3, 20),\r\n    end: new Date(2020, 3, 26),\r\n  },\r\n  v3: {\r\n    start: new Date(2020, 3, 27),\r\n    end: new Date(2020, 4, 9),\r\n  },\r\n  v4: {\r\n    start: new Date(2020, 4, 10),\r\n    end: new Date(),\r\n  },\r\n};\r\n\r\nexport const LOCALE_SHORTHANDS = {\r\n  english: null,\r\n  hindi: hi,\r\n  telugu: te,\r\n  kannada: null,\r\n  gujarati: gu,\r\n  marathi: null,\r\n  tamil: ta,\r\n  bengali: bn,\r\n  punjabi: null,\r\n  malayalam: null,\r\n  odiya: null,\r\n};\r\n\r\nexport const ESSENTIALS_CATEGORIES = {\r\n  'Accommodation and Shelter Homes': 'homes',\r\n  Ambulance: 'ambulance',\r\n  'Community Kitchen': 'kitchen',\r\n  'CoVID-19 Testing Lab': 'lab',\r\n  'Delivery [Vegetables, Fruits, Groceries, Medicines, etc.]': 'delivery',\r\n  'Fire Brigade': 'fire',\r\n  'Free Food': 'food',\r\n  Fundraisers: 'fund',\r\n  'Government Helpline': 'helpline',\r\n  'Hospitals and Centers': 'hospital',\r\n  'Mental well being and Emotional Support': 'well-being',\r\n  Police: 'police',\r\n  'Senior Citizen Support': 'seniors',\r\n  Transportation: 'transport',\r\n  'Quarantine Facility': 'quarantine',\r\n  Other: 'other',\r\n  'Helpline for Cyclone Amphan': 'cyclone amphan',\r\n};\r\n","import {\r\n  STATE_CODES,\r\n  STATE_CODES_REVERSE,\r\n  LOCALE_SHORTHANDS,\r\n} from '../constants';\r\n\r\nimport {\r\n  parse,\r\n  differenceInDays,\r\n  isBefore,\r\n  isSameDay,\r\n  startOfDay,\r\n  format,\r\n  formatDistance,\r\n} from 'date-fns';\r\nimport {utcToZonedTime} from 'date-fns-tz';\r\nimport i18n from 'i18next';\r\n\r\nexport const isDevelopmentOrTest = () => {\r\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test')\r\n    return true;\r\n  return false;\r\n};\r\n\r\nexport const getStateName = (code) => {\r\n  return STATE_CODES[code.toUpperCase()];\r\n};\r\n\r\nexport const getIndiaDay = () => {\r\n  return startOfDay(utcToZonedTime(new Date(), 'Asia/Kolkata'));\r\n};\r\n\r\nexport const formatDate = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const year = unformattedDate.slice(6, 10);\r\n  const time = unformattedDate.slice(11);\r\n  return `${year}-${month}-${day}T${time}+05:30`;\r\n};\r\n\r\nexport const formatDateAbsolute = (unformattedDate) => {\r\n  return format(\r\n    parse(unformattedDate, 'dd/MM/yyyy HH:mm:ss', new Date()),\r\n    'dd MMM, hh:mm b',\r\n    {\r\n      locale: LOCALE_SHORTHANDS[i18n.language],\r\n    }\r\n  );\r\n};\r\n\r\nexport const formatDayMonth = (unformattedDate) => {\r\n  return format(parse(unformattedDate, 'dd/MM/yyyy', new Date()), 'dd MMM', {\r\n    locale: LOCALE_SHORTHANDS[i18n.language],\r\n  });\r\n};\r\n\r\nexport const formatLastUpdated = (unformattedDate) => {\r\n  return formatDistance(new Date(formatDate(unformattedDate)), new Date(), {\r\n    locale: LOCALE_SHORTHANDS[i18n.language],\r\n  });\r\n};\r\n\r\nexport const formatTimeseriesDate = (unformattedDate) => {\r\n  return format(unformattedDate, 'dd MMMM', {\r\n    locale: LOCALE_SHORTHANDS[i18n.language],\r\n  });\r\n};\r\n\r\nexport const formatTimeseriesTickX = (unformattedDate) => {\r\n  return format(unformattedDate, 'd MMM', {\r\n    locale: LOCALE_SHORTHANDS[i18n.language],\r\n  });\r\n};\r\n\r\nconst validateCTS = (data = []) => {\r\n  const dataTypes = [\r\n    'dailyconfirmed',\r\n    'dailydeceased',\r\n    'dailyrecovered',\r\n    'totalconfirmed',\r\n    'totaldeceased',\r\n    'totalrecovered',\r\n  ];\r\n  return data\r\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\r\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\r\n    .filter((d) => {\r\n      // Skip data from the current day\r\n      const today = getIndiaDay();\r\n      const date = parse(d.date, 'dd MMMM', new Date(2020, 0, 1));\r\n      return isBefore(date, today);\r\n    });\r\n};\r\n\r\nexport const preprocessTimeseries = (timeseries) => {\r\n  return validateCTS(timeseries).map((stat, index) => ({\r\n    date: parse(stat.date, 'dd MMMM', new Date(2020, 0, 1)),\r\n    totalconfirmed: +stat.totalconfirmed,\r\n    totalrecovered: +stat.totalrecovered,\r\n    totaldeceased: +stat.totaldeceased,\r\n    dailyconfirmed: +stat.dailyconfirmed,\r\n    dailyrecovered: +stat.dailyrecovered,\r\n    dailydeceased: +stat.dailydeceased,\r\n    // Active = Confimed - Recovered - Deceased\r\n    totalactive:\r\n      +stat.totalconfirmed - +stat.totalrecovered - +stat.totaldeceased,\r\n    dailyactive:\r\n      +stat.dailyconfirmed - +stat.dailyrecovered - +stat.dailydeceased,\r\n  }));\r\n};\r\n\r\n/**\r\n * Returns the last `days` entries\r\n * @param {Array<Object>} timeseries\r\n * @param {number} days\r\n *\r\n * @return {Array<Object>}\r\n */\r\nexport function sliceTimeseriesFromEnd(timeseries, days) {\r\n  return timeseries.slice(-days);\r\n}\r\n\r\nexport const formatNumber = (value) => {\r\n  const numberFormatter = new Intl.NumberFormat('en-IN');\r\n  return isNaN(value) ? '-' : numberFormatter.format(value);\r\n};\r\n\r\nexport const parseStateTimeseries = ({states_daily: data}) => {\r\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\r\n    a[c] = [];\r\n    return a;\r\n  }, {});\r\n\r\n  const today = getIndiaDay();\r\n  for (let i = 0; i < data.length; i += 3) {\r\n    const date = parse(data[i].date, 'dd-MMM-yy', new Date());\r\n    // Skip data from the current day\r\n    if (isBefore(date, today)) {\r\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\r\n        const stateCode = k.toLowerCase();\r\n        const prev = v[v.length - 1] || {};\r\n        // Parser\r\n        const dailyconfirmed = +data[i][stateCode] || 0;\r\n        const dailyrecovered = +data[i + 1][stateCode] || 0;\r\n        const dailydeceased = +data[i + 2][stateCode] || 0;\r\n        const totalconfirmed = +data[i][stateCode] + (prev.totalconfirmed || 0);\r\n        const totalrecovered =\r\n          +data[i + 1][stateCode] + (prev.totalrecovered || 0);\r\n        const totaldeceased =\r\n          +data[i + 2][stateCode] + (prev.totaldeceased || 0);\r\n        // Push\r\n        v.push({\r\n          date: date,\r\n          dailyconfirmed: dailyconfirmed,\r\n          dailyrecovered: dailyrecovered,\r\n          dailydeceased: dailydeceased,\r\n          totalconfirmed: totalconfirmed,\r\n          totalrecovered: totalrecovered,\r\n          totaldeceased: totaldeceased,\r\n          // Active = Confimed - Recovered - Deceased\r\n          totalactive: totalconfirmed - totalrecovered - totaldeceased,\r\n          dailyactive: dailyconfirmed - dailyrecovered - dailydeceased,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  return statewiseSeries;\r\n};\r\n\r\nexport const parseStateTestData = (data) => {\r\n  const reversed = [...data].reverse();\r\n  return Object.keys(STATE_CODES_REVERSE).reduce((ret, state) => {\r\n    const obj = reversed.find(\r\n      (obj) => obj.state === state && obj.totaltested !== ''\r\n    );\r\n    ret[state] = {\r\n      source: obj?.source1 || obj?.source2,\r\n      totaltested: obj?.totaltested,\r\n      updatedon: obj?.updatedon,\r\n    };\r\n    return ret;\r\n  }, {});\r\n};\r\n\r\nexport const parseStateTestTimeseries = (data) => {\r\n  const testTimseries = Object.keys(STATE_CODES).reduce((ret, sc) => {\r\n    ret[sc] = [];\r\n    return ret;\r\n  }, {});\r\n\r\n  const today = getIndiaDay();\r\n  data.forEach((d) => {\r\n    const date = parse(d.updatedon, 'dd/MM/yyyy', new Date());\r\n    const totaltested = +d.totaltested;\r\n    const stateCode = STATE_CODES_REVERSE[d.state];\r\n    if (stateCode && isBefore(date, today) && totaltested) {\r\n      const stateTs = testTimseries[stateCode];\r\n      let dailytested;\r\n      if (stateTs.length) {\r\n        const prev = stateTs[stateTs.length - 1];\r\n        dailytested =\r\n          differenceInDays(date, prev.date) === 1\r\n            ? totaltested - prev.totaltested\r\n            : NaN;\r\n      } else dailytested = NaN;\r\n      stateTs.push({\r\n        date: date,\r\n        totaltested: totaltested,\r\n        dailytested: dailytested,\r\n      });\r\n    }\r\n  });\r\n  return testTimseries;\r\n};\r\n\r\nexport const parseTotalTestTimeseries = (data) => {\r\n  const testTimseries = [];\r\n  const today = getIndiaDay();\r\n  data.forEach((d) => {\r\n    const date = parse(\r\n      d.updatetimestamp.split(' ')[0],\r\n      'dd/MM/yyyy',\r\n      new Date()\r\n    );\r\n    const totaltested = +d.totalsamplestested;\r\n    if (isBefore(date, today) && totaltested) {\r\n      let dailytested;\r\n      if (testTimseries.length) {\r\n        const prev = testTimseries[testTimseries.length - 1];\r\n        if (isSameDay(date, prev.date)) {\r\n          prev.dailytested += totaltested - prev.totaltested;\r\n          prev.totaltested = totaltested;\r\n        } else {\r\n          if (differenceInDays(date, prev.date) === 1)\r\n            dailytested = totaltested - prev.totaltested;\r\n          else dailytested = NaN;\r\n        }\r\n      } else dailytested = NaN;\r\n      testTimseries.push({\r\n        date: date,\r\n        totaltested: totaltested,\r\n        dailytested: dailytested,\r\n      });\r\n    }\r\n  });\r\n  return testTimseries;\r\n};\r\n\r\nexport const mergeTimeseries = (ts1, ts2) => {\r\n  const tsRet = Object.assign({}, ts1);\r\n  for (const state in ts1) {\r\n    if (ts1.hasOwnProperty(state)) {\r\n      tsRet[state] = ts1[state].map((d1) => {\r\n        const testData = ts2[state].find((d2) => isSameDay(d1.date, d2.date));\r\n        return {\r\n          totaltested: testData?.totaltested,\r\n          dailytested: testData?.dailytested,\r\n          ...d1,\r\n        };\r\n      });\r\n    }\r\n  }\r\n  return tsRet;\r\n};\r\n\r\nexport const capitalize = (s) => {\r\n  if (typeof s !== 'string') return '';\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nexport const capitalizeAll = (s) => {\r\n  if (typeof s !== 'string') return '';\r\n  const str = s.toLowerCase().split(' ');\r\n  for (let i = 0; i < str.length; i++) {\r\n    str[i] = capitalize(str[i]);\r\n  }\r\n  return str.join(' ');\r\n};\r\n\r\nexport const abbreviate = (s) => {\r\n  return s.slice(0, 1) + s.slice(1).replace(/[aeiou]/gi, '');\r\n};\r\n\r\nexport const parseDistrictZones = (data, state) => {\r\n  const zones = data.reduce((ret, d) => {\r\n    ret[d.state] = ret[d.state] || {};\r\n    ret[d.state][d.district] = d;\r\n    return ret;\r\n  }, {});\r\n  Object.values(STATE_CODES).forEach((state) => {\r\n    if (!zones[state]) zones[state] = {};\r\n  });\r\n  return state ? {[state]: zones[state]} : zones;\r\n};\r\n\r\nexport const toTitleCase = (str) => {\r\n  return str.replace(/\\w\\S*/g, function (txt) {\r\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n  });\r\n};\r\n"],"sourceRoot":""}