{"version":3,"sources":["components/footer.js","utils/hooks.js","components/tooltips.js","components/level.js","components/minigraph.js","components/maplegend.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","components/timeseriesexplorer.js","components/search.js","components/row.js","components/table.js","components/updates.js","components/home.js"],"names":["React","memo","props","t","useTranslation","className","style","animationDelay","href","target","rel","justifyContent","useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","observer","forEach","entry","index","contentRect","observe","unobserve","testedToolTip","onClick","e","stopPropagation","data-for","data-tip","data-event","data-event-off","id","place","type","effect","multiline","scrollHide","globalEventOff","data","setData","useEffectOnce","active","confirmed","recovered","deaths","deltaconfirmed","deltadeaths","deltarecovered","isNaN","formatNumber","timeseries","timeSeriesData","setTimeSeriesData","svgRef1","useRef","svgRef2","svgRef3","svgRef4","slice","length","graphData","useCallback","margin","chartRight","chartBottom","svg1","d3","svg2","svg3","svg4","d","dailyconfirmed","dailyrecovered","dailydeceased","xScale","domain","date","range","svgArray","dataTypes","colors","dailyMin","dailyactive","dailyMax","Math","max","domainMinMax","yScale","svg","i","color","path","append","datum","attr","x","y","curve","totalLength","node","getTotalLength","transition","delay","duration","selectAll","enter","on","width","height","viewBox","preserveAspectRatio","MapLegend","mapScale","statistic","mapStatistic","mapOption","svgRef","wrapperRef","getBoundingClientRect","MAP_STATISTICS","ZONE","call","legend","tickValues","marginLeft","marginRight","ordinalWeights","Object","values","HOTSPOTS","select","remove","domainMax","join","copy","tickSize","tickPadding","tickFormat","g","title","capitalizeAll","PER_MILLION","ticks","n","TOTAL","Number","isInteger","position","marginTop","marginBottom","tickAdjust","interpolate","min","rangeRound","ramp","toDataURL","interpolator","assign","undefined","round","map","invertExtent","thresholds","quantiles","thresholdFormat","widthScale","reduce","a","b","xPos","w","acc","bandwidth","text","canvas","context","getContext","fillStyle","fillRect","caseColor","caseType","alpha","ChoroplethMap","mapData","currentMap","changeMap","regionHighlighted","setRegionHighlighted","isCountryLoaded","mapMeta","MAP_META","name","geoDataResponse","useSWR","geoDataFile","file","useMemo","stat","clamp","nice","colorInterpolator","geoData","topology","topojson","objects","graphObjectStates","graphObjectDistricts","widthDefault","heightDefault","projection","fitWidth","fitSize","bBox","bounds","split","features","view","MAP_VIEWS","STATES","f","district","properties","state","st_nm","obj","onceTouchedRegion","regionSelection","sel","region","mapType","MAP_TYPES","STATE","this","parseFloat","total","toFixed","toString","circlesData","value","Unknown","sort","centroid","meshStates","COUNTRY","meshDistricts","DISTRICTS","highlightRegionInMap","each","highlighted","parentNode","appendChild","Fragment","colorInterpolationFilters","getRegionFromState","mapName","states","districts","zones","stateTestData","anchor","setAnchor","setMapOption","setCurrentMap","currentMapMeta","currentMapData","dtype","keys","acc1","acc2","zone","typeCount","parseInt","STATE_POPULATIONS","districtWiseData","districtData","Total","stateData","find","getRegionFromDistrict","hoveredRegion","panelRegion","hoveredRegionCount","hoveredRegionZone","switchMapToState","newMapMeta","topDistrict","filter","ReactDOM","unstable_batchedUpdates","testObj","display","window","innerWidth","action","totaltested","parse","updatedon","Date","formatDayMonth","source","lastupdatedtime","formatDate","formatLastUpdated","to","STATE_CODES_REVERSE","prevProps","currProps","equal","timeseriesProp","chartType","mode","logMode","stateCode","Infinity","lastDaysCount","setLastDaysCount","setTimeseries","datapoint","setDatapoint","setIndex","moving","setMoving","svgRef5","transformTimeSeries","slicedTimeseries","sliceTimeseriesFromEnd","T","yScales","svg5","dateMin","subDays","dateMax","addDays","numTicksX","xAxis","tick","formatTimeseriesTickX","xAxis2","yAxis","plotTotal","dataTypesTotal","dataTypesDaily","uniformScaleMin","totalactive","totalrecovered","totaldeceased","uniformScaleMax","totalconfirmed","yScaleUniformLinear","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","mousemove","xm","invert","bisectDate","left","j","mouseout","typeTotal","typeDaily","filteredTimeseries","reverse","p","getPointAtLength","repeat","dateStr","formatTimeseriesDate","chartKey1","chartKey2","chartKey3","chartKey4","chartKey5","currentStatusCount","currentDiff","formatedDiff","aria-label","isIntersecting","activeStateCode","onHighlightState","useLocalStorage","setChartType","isTimeseriesIntersecting","setIsTimeseriesIntersecting","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","options","rootMargin","onChange","htmlFor","checked","event","disabled","selectedState","selectedOptions","getAttribute","JSON","s","statecode","key","statedata","stringify","engine","Bloodhound","initialize","local","STATE_CODES_ARRAY","queryTokenizer","tokenizers","whitespace","datumTokenizer","districtEngine","limit","indexRemote","remote","url","transform","response","stateName","districtName","push","essentialsEngine","resources","essentialSuggestions","locationSuggestions","SearchLoader","useMeasure","svgElement","speed","rx","ry","districtZones","searchValue","setSearchValue","expand","setExpand","results","setResults","searchInput","handleSearch","essentialsSync","datums","result","essentialsObj","nameoftheorganisation","category","website","contact","description","descriptionandorserviceprovided","city","phonenumber","search","stateObj","route","code","districtObj","setNativeValue","element","valueSetter","getOwnPropertyDescriptor","set","prototype","getPrototypeOf","prototypeValueSetter","useDebounce","onFocus","onBlur","STATE_CODES","classnames","toLowerCase","size","capitalize","ESSENTIALS_CATEGORIES","onMouseDown","preventDefault","dispatchEvent","Event","bubbles","suggestion","useBreakpoint","createBreakpoint","XL","L","S","StateCell","ArrowUp","DistrictHeaderCell","handleSort","sortData","breakpoint","abbreviate","sortColumn","isAscending","DistrictCell","delta","DistrictRow","onHighlightDistrict","sortedDistricts","onMouseEnter","notes","DISTRICT_ROW_STATISTICS","setSortedDistricts","showDistricts","setShowDistricts","setSortData","history","useHistory","Chevron","rotateRightDown","rotateDownRight","_onHighlightState","doSort","sorted","district1","district2","localeCompare","newSortData","statenotes","STATE_ROW_STATISTICS","colSpan","paddingBottom","align","StateHeaderCell","sortedStates","setSortedStates","FineprintTop","FineprintBottom","newSortedStates","newDate","currentDate","Updates","updates","setUpdates","axios","get","then","catch","err","console","log","useLayoutEffect","format","activity","update","replace","activityDate","timestamp","getDate","formatDistance","dangerouslySetInnerHTML","__html","Home","setStates","stateDistrictWiseData","setStateDistrictWiseData","setDistrictZones","setStateTestData","lastUpdated","setLastUpdated","fetched","setFetched","showUpdates","setShowUpdates","lastViewedLog","setLastViewedLog","newUpdate","setNewUpdate","Bell","BellOff","getStates","lastTimestamp","Promise","all","statesDailyResponse","zonesResponse","stateDistrictWiseResponse","statewise","parseDistrictZones","ts","parseStateTimeseries","preprocessTimeseries","cases_time_series","testTs","parseStateTestTimeseries","states_tested_data","parseTotalTestTimeseries","tested","tsMerged","mergeTimeseries","testData","parseStateTestData","totalTest","totalsamplestested","updatetimestamp","Helmet","content","formatDateAbsolute","summary"],"mappings":"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","file":"static/js/Home.d0754bd3.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nfunction Footer(props) {\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\r\n      <h5>{t('Project made by Nihal Maharaj , Nikhil Rathore , Prashant Namdeo , Abhishek Srivastava')}</h5>\r\n\r\n      <div className=\"link\">\r\n        <a\r\n          href=\"https://github.com/covid19india\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          covid19india\r\n        </a>\r\n      </div>\r\n\r\n      <a\r\n        className=\"button excel\"\r\n        href=\"http://patientdb.covid19india.org\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <Icon.Database />\r\n        <span>{t('Crowdsourced Patient Database')}</span>\r\n      </a>\r\n\r\n      <a\r\n        href=\"https://www.facebook.com/nihal.maharaj.5/\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"button twitter\"\r\n        style={{justifyContent: 'center'}}\r\n      >\r\n        \r\n        <Icon.Facebook />\r\n        <span>{t('View updates on Facebook')}</span>\r\n      </a>\r\n\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default React.memo(Footer);\r\n","import {ResizeObserver} from '@juggle/resize-observer';\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport const useResizeObserver = (ref) => {\r\n  const [dimensions, setDimensions] = useState(null);\r\n  useEffect(() => {\r\n    const observeTarget = ref.current;\r\n    const resizeObserver = new ResizeObserver((entries, observer) => {\r\n      entries.forEach((entry, index) => {\r\n        setDimensions(entry.contentRect);\r\n      });\r\n    });\r\n    resizeObserver.observe(observeTarget);\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n    };\r\n  }, [ref]);\r\n  return dimensions;\r\n};\r\n","import React from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nexport const testedToolTip = (\r\n  <span className=\"tooltip-tested\" onClick={(e) => e.stopPropagation()}>\r\n    <Icon.Info\r\n      data-for=\"tested\"\r\n      data-tip=\"Reporting total samples tested from ICMR data\"\r\n      data-event=\"touchstart mouseover\"\r\n      data-event-off=\"mouseleave\"\r\n    />\r\n    <ReactTooltip\r\n      id=\"tested\"\r\n      place=\"top\"\r\n      type=\"dark\"\r\n      effect=\"solid\"\r\n      multiline={true}\r\n      scrollHide={true}\r\n      globalEventOff=\"click\"\r\n    />\r\n  </span>\r\n);\r\n","import {formatNumber} from '../utils/commonfunctions';\r\n\r\nimport React, {useState} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useEffectOnce} from 'react-use';\r\n\r\nfunction Level(props) {\r\n  const [data, setData] = useState(props.data);\r\n  const {t} = useTranslation();\r\n\r\n  useEffectOnce(() => {\r\n    setData({\r\n      active: +props.data.active,\r\n      confirmed: +props.data.confirmed,\r\n      recovered: +props.data.recovered,\r\n      deaths: +props.data.deaths,\r\n      deltaconfirmed: +props.data.deltaconfirmed,\r\n      deltadeaths: +props.data.deltadeaths,\r\n      deltarecovered: +props.data.deltarecovered,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"Level\">\r\n      <div\r\n        className=\"level-item is-cherry fadeInUp\"\r\n        style={{animationDelay: '1s'}}\r\n      >\r\n        <h5>{t('Confirmed')}</h5>\r\n        <h4>\r\n          [\r\n          {isNaN(data.deltaconfirmed)\r\n            ? ''\r\n            : data.deltaconfirmed > 0\r\n            ? '+' + formatNumber(data.deltaconfirmed)\r\n            : '+0'}\r\n          ]\r\n        </h4>\r\n        <h1>{formatNumber(data.confirmed)} </h1>\r\n      </div>\r\n\r\n      <div\r\n        className=\"level-item is-blue fadeInUp\"\r\n        style={{animationDelay: '1.1s'}}\r\n      >\r\n        <h5 className=\"heading\">{t('Active')}</h5>\r\n        <h4>&nbsp;</h4>\r\n        <h1 className=\"title has-text-info\">{formatNumber(data.active)}</h1>\r\n      </div>\r\n\r\n      <div\r\n        className=\"level-item is-green fadeInUp\"\r\n        style={{animationDelay: '1.2s'}}\r\n      >\r\n        <h5 className=\"heading\">{t('Recovered')}</h5>\r\n        <h4>\r\n          [\r\n          {isNaN(data.deltarecovered)\r\n            ? ''\r\n            : data.deltarecovered > 0\r\n            ? '+' + formatNumber(data.deltarecovered)\r\n            : '+0'}\r\n          ]\r\n        </h4>\r\n        <h1 className=\"title has-text-success\">\r\n          {formatNumber(data.recovered)}{' '}\r\n        </h1>\r\n      </div>\r\n\r\n      <div\r\n        className=\"level-item is-gray fadeInUp\"\r\n        style={{animationDelay: '1.3s'}}\r\n      >\r\n        <h5 className=\"heading\">{t('Deceased')}</h5>\r\n        <h4>\r\n          [\r\n          {isNaN(data.deltadeaths)\r\n            ? ''\r\n            : data.deltadeaths > 0\r\n            ? '+' + formatNumber(data.deltadeaths)\r\n            : '+0'}\r\n          ]\r\n        </h4>\r\n        <h1 className=\"title has-text-grey\">{formatNumber(data.deaths)}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Level);\r\n","import * as d3 from 'd3';\r\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\r\n\r\nfunction Minigraph({timeseries}) {\r\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\r\n  const svgRef1 = useRef();\r\n  const svgRef2 = useRef();\r\n  const svgRef3 = useRef();\r\n  const svgRef4 = useRef();\r\n\r\n  useEffect(() => {\r\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\r\n  }, [timeseries]);\r\n\r\n  const graphData = useCallback((data) => {\r\n    if (data.length <= 1) return 0;\r\n\r\n    const margin = {top: 10, right: 5, bottom: 20, left: 5};\r\n    const chartRight = 100 - margin.right;\r\n    const chartBottom = 100 - margin.bottom;\r\n\r\n    const svg1 = d3.select(svgRef1.current);\r\n    const svg2 = d3.select(svgRef2.current);\r\n    const svg3 = d3.select(svgRef3.current);\r\n    const svg4 = d3.select(svgRef4.current);\r\n\r\n    data.forEach((d) => {\r\n      d['dailyactive'] = d.dailyconfirmed - d.dailyrecovered - d.dailydeceased;\r\n    });\r\n\r\n    const xScale = d3\r\n      .scaleTime()\r\n      .domain(d3.extent(data, (d) => d.date))\r\n      .range([margin.left, chartRight]);\r\n\r\n    const svgArray = [svg1, svg2, svg3, svg4];\r\n    const dataTypes = [\r\n      'dailyconfirmed',\r\n      'dailyactive',\r\n      'dailyrecovered',\r\n      'dailydeceased',\r\n    ];\r\n    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\r\n\r\n    const dailyMin = d3.min(data, (d) => d.dailyactive);\r\n    const dailyMax = d3.max(data, (d) =>\r\n      Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\r\n    );\r\n    const domainMinMax = Math.max(-dailyMin, dailyMax);\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([-domainMinMax, domainMinMax])\r\n      .range([chartBottom, margin.top]);\r\n\r\n    svgArray.forEach((svg, i) => {\r\n      const type = dataTypes[i];\r\n      const color = colors[i];\r\n\r\n      const path = svg\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', color + '99')\r\n        .attr('stroke-width', 2.5)\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x((d) => xScale(d.date))\r\n            .y((d) => yScale(d[type]))\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength = path.node().getTotalLength();\r\n      path\r\n        .attr('stroke-dasharray', totalLength + ' ' + totalLength)\r\n        .attr('stroke-dashoffset', totalLength)\r\n        .transition()\r\n        .delay(500)\r\n        .duration(2500)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', color)\r\n        .attr('stroke', color)\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', (d) => xScale(d.date))\r\n        .attr('cy', (d) => yScale(d[type]))\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .delay(500)\r\n        .duration(2500)\r\n        .style('opacity', 1);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    graphData(timeSeriesData);\r\n  }, [timeSeriesData, graphData]);\r\n\r\n  return (\r\n    <div className=\"Minigraph\">\r\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\r\n        <svg\r\n          ref={svgRef1}\r\n          width=\"100\"\r\n          height=\"75\"\r\n          viewBox=\"0 0 100 75\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-blue fadeInUp\"\r\n        style={{animationDelay: '1.5s'}}\r\n      >\r\n        <svg\r\n          ref={svgRef2}\r\n          width=\"100\"\r\n          height=\"75\"\r\n          viewBox=\"0 0 100 75\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-green fadeInUp\"\r\n        style={{animationDelay: '1.6s'}}\r\n      >\r\n        <svg\r\n          ref={svgRef3}\r\n          width=\"100\"\r\n          height=\"75\"\r\n          viewBox=\"0 0 100 75\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-gray fadeInUp\"\r\n        style={{animationDelay: '1.7s'}}\r\n      >\r\n        <svg\r\n          ref={svgRef4}\r\n          width=\"100\"\r\n          height=\"75\"\r\n          viewBox=\"0 0 100 75\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Minigraph);\r\n","import {MAP_STATISTICS} from '../constants';\r\nimport {capitalizeAll, formatNumber} from '../utils/commonfunctions';\r\nimport {useResizeObserver} from '../utils/hooks';\r\n\r\nimport * as d3 from 'd3';\r\nimport React, {useEffect, useRef} from 'react';\r\n\r\nfunction MapLegend({mapScale, statistic, mapStatistic, mapOption}) {\r\n  const svgRef = useRef(null);\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(svgRef.current);\r\n    const {width, height} =\r\n      dimensions || wrapperRef.current.getBoundingClientRect();\r\n\r\n    if (mapStatistic === MAP_STATISTICS.ZONE) {\r\n      svg.call(() =>\r\n        legend({\r\n          svg: svg,\r\n          color: mapScale,\r\n          width: width,\r\n          height: height,\r\n          tickValues: [],\r\n          marginLeft: 2,\r\n          marginRight: 20,\r\n          ordinalWeights: Object.values(statistic),\r\n        })\r\n      );\r\n    } else if (mapStatistic === MAP_STATISTICS.HOTSPOTS) {\r\n      const t = svg.transition().duration(500);\r\n      svg\r\n        .select('.ramp')\r\n        .transition(t)\r\n        .attr('opacity', 0)\r\n        .attr('xlink:href', null);\r\n\r\n      svg\r\n        .select('.bars')\r\n        .selectAll('rect')\r\n        .transition(t)\r\n        .attr('opacity', 0)\r\n        .remove();\r\n      svg.selectAll('.axis > *').remove();\r\n\r\n      const domainMax = mapScale.domain()[1];\r\n\r\n      const legend = svg\r\n        .select('.circles')\r\n        .attr('transform', `translate(48,40)`)\r\n        .attr('text-anchor', 'middle');\r\n\r\n      legend\r\n        .selectAll('circle')\r\n        .data([domainMax / 10, (domainMax * 2) / 5, domainMax])\r\n        .join('circle')\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#ccc')\r\n        .transition(t)\r\n        .attr('cy', (d) => -mapScale(d))\r\n        .attr('r', mapScale);\r\n\r\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\r\n\r\n      svg\r\n        .select('.circleAxis')\r\n        .attr('transform', `translate(48,50)`)\r\n        .transition(t)\r\n        .call(\r\n          d3\r\n            .axisRight(yScale)\r\n            .tickSize(0)\r\n            .tickPadding(0)\r\n            .tickValues([domainMax / 10, (domainMax * 2) / 5, domainMax])\r\n            .tickFormat(d3.format('0~s'))\r\n        )\r\n        .selectAll('.tick text')\r\n        .style('text-anchor', 'middle');\r\n\r\n      svg.select('.circleAxis').call((g) => g.select('.domain').remove());\r\n    } else {\r\n      svg.call(() =>\r\n        legend({\r\n          svg: svg,\r\n          color: mapScale,\r\n          title:\r\n            capitalizeAll(mapOption) +\r\n            (mapStatistic === MAP_STATISTICS.PER_MILLION\r\n              ? ' cases per million'\r\n              : ' cases'),\r\n          width: width,\r\n          height: height,\r\n          ticks: 5,\r\n          tickFormat: function (d, i, n) {\r\n            if (mapStatistic === MAP_STATISTICS.TOTAL && !Number.isInteger(d))\r\n              return;\r\n            if (i === n.length - 1) return formatNumber(d) + '+';\r\n            return formatNumber(d);\r\n          },\r\n          marginLeft: 2,\r\n          marginRight: 20,\r\n        })\r\n      );\r\n    }\r\n    svg.attr('class', mapStatistic === MAP_STATISTICS.ZONE ? 'zone' : '');\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"svg-parent maplegend fadeInUp\"\r\n      style={{animationDelay: '2.5s', height: 50}}\r\n      ref={wrapperRef}\r\n    >\r\n      <svg id=\"legend\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\r\n        <image className=\"ramp\" />\r\n        <g className=\"bars\"></g>\r\n        <g className=\"circles\"></g>\r\n        <g className=\"circleAxis\"></g>\r\n        <g className=\"axis\">\r\n          <text className=\"axistext\" />\r\n        </g>\r\n      </svg>\r\n      <canvas\r\n        className=\"color-scale\"\r\n        style={{position: 'absolute', height: 0}}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapLegend;\r\n\r\nfunction legend({\r\n  svg,\r\n  color,\r\n  title,\r\n  tickSize = 6,\r\n  width = 320,\r\n  height = 44 + tickSize,\r\n  marginTop = 18,\r\n  marginRight = 0,\r\n  marginBottom = 16 + tickSize,\r\n  marginLeft = 0,\r\n  ticks = width / 64,\r\n  tickFormat,\r\n  tickValues,\r\n  ordinalWeights,\r\n} = {}) {\r\n  svg.selectAll('.circles > *').remove();\r\n  svg.selectAll('.circleAxis > *').remove();\r\n  const t = svg.transition().duration(500);\r\n\r\n  let tickAdjust = (g) => {\r\n    const ticks = g.selectAll('.tick line');\r\n    ticks.attr('y1', marginTop + marginBottom - height);\r\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\r\n  };\r\n  let x;\r\n\r\n  // Continuous\r\n  if (color.interpolate) {\r\n    const n = Math.min(color.domain().length, color.range().length);\r\n\r\n    x = color\r\n      .copy()\r\n      .rangeRound(\r\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\r\n      );\r\n\r\n    svg\r\n      .select('.ramp')\r\n      .attr('class', 'ramp')\r\n      .attr('x', marginLeft)\r\n      .attr('y', marginTop)\r\n      .attr('width', width - marginLeft - marginRight)\r\n      .attr('height', height - marginTop - marginBottom)\r\n      .attr('preserveAspectRatio', 'none')\r\n      .attr(\r\n        'xlink:href',\r\n        ramp(\r\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\r\n        ).toDataURL()\r\n      );\r\n  }\r\n\r\n  // Sequential\r\n  else if (color.interpolator) {\r\n    svg\r\n      .select('.bars')\r\n      .selectAll('rect')\r\n      .transition(t)\r\n      .attr('opacity', 0)\r\n      .remove();\r\n\r\n    x = Object.assign(\r\n      color\r\n        .copy()\r\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\r\n      {\r\n        range() {\r\n          return [marginLeft, width - marginRight];\r\n        },\r\n      }\r\n    );\r\n\r\n    svg\r\n      .select('.ramp')\r\n      .attr('class', 'ramp')\r\n      .attr('x', marginLeft)\r\n      .attr('y', marginTop)\r\n      .attr('width', width - marginLeft - marginRight)\r\n      .attr('height', height - marginTop - marginBottom)\r\n      .attr('preserveAspectRatio', 'none')\r\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\r\n      .transition(t)\r\n      .attr('opacity', 1);\r\n\r\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\r\n    if (!x.ticks) {\r\n      if (tickValues === undefined) {\r\n        const n = Math.round(ticks + 1);\r\n        tickValues = d3\r\n          .range(n)\r\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\r\n      }\r\n      if (typeof tickFormat !== 'function') {\r\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Threshold\r\n  else if (color.invertExtent) {\r\n    const thresholds = color.thresholds\r\n      ? color.thresholds() // scaleQuantize\r\n      : color.quantiles\r\n      ? color.quantiles() // scaleQuantile\r\n      : color.domain(); // scaleThreshold\r\n\r\n    const thresholdFormat =\r\n      tickFormat === undefined\r\n        ? (d) => d\r\n        : typeof tickFormat === 'string'\r\n        ? d3.format(tickFormat)\r\n        : tickFormat;\r\n\r\n    x = d3\r\n      .scaleLinear()\r\n      .domain([-1, color.range().length - 1])\r\n      .rangeRound([marginLeft, width - marginRight]);\r\n\r\n    svg\r\n      .append('g')\r\n      .selectAll('rect')\r\n      .data(color.range())\r\n      .join('rect')\r\n      .attr('x', (d, i) => x(i - 1))\r\n      .attr('y', marginTop)\r\n      .attr('width', (d, i) => x(i) - x(i - 1))\r\n      .attr('height', height - marginTop - marginBottom)\r\n      .attr('fill', (d) => d);\r\n\r\n    tickValues = d3.range(-1, thresholds.length);\r\n    tickFormat = (i) => {\r\n      if (i === -1) return thresholdFormat(1);\r\n      else if (i === thresholds.length - 1) return;\r\n      else if (i === thresholds.length - 2)\r\n        return thresholdFormat(thresholds[i] + '+', i);\r\n      return thresholdFormat(thresholds[i], i);\r\n    };\r\n  }\r\n\r\n  // Ordinal\r\n  else {\r\n    svg\r\n      .select('.ramp')\r\n      .transition(t)\r\n      .attr('opacity', 0)\r\n      .attr('xlink:href', null);\r\n    if (!ordinalWeights) {\r\n      x = d3\r\n        .scaleBand()\r\n        .domain(color.domain())\r\n        .rangeRound([marginLeft, width - marginRight]);\r\n      svg\r\n        .selectAll('rect')\r\n        .data(color.domain())\r\n        .join('rect')\r\n        .attr('x', x)\r\n        .attr('y', marginTop)\r\n        .attr('width', Math.max(0, x.bandwidth() - 1))\r\n        .attr('height', height - marginTop - marginBottom)\r\n        .attr('fill', color);\r\n    } else {\r\n      const widthScale = d3\r\n        .scaleLinear()\r\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\r\n        .rangeRound([0, width - marginLeft - marginRight]);\r\n\r\n      const xPos = ordinalWeights.map((w, i) =>\r\n        ordinalWeights\r\n          .slice(0, i)\r\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\r\n      );\r\n\r\n      x = d3.scaleOrdinal().domain(color.domain()).range(xPos);\r\n\r\n      svg\r\n        .select('.bars')\r\n        .selectAll('rect')\r\n        .data(color.domain())\r\n        .join((enter) =>\r\n          enter\r\n            .append('rect')\r\n            .attr('x', x)\r\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\r\n        )\r\n        .attr('y', marginTop)\r\n        .attr('height', height - marginTop - marginBottom)\r\n        .attr('fill', color)\r\n        .transition(t)\r\n        .attr('x', x)\r\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\r\n        .attr('opacity', 1);\r\n    }\r\n\r\n    tickAdjust = () => {};\r\n  }\r\n\r\n  svg\r\n    .select('.axis')\r\n    .attr('transform', `translate(0,${height - marginBottom})`)\r\n    .transition(t)\r\n    .attr('class', 'axis')\r\n    .call(\r\n      d3\r\n        .axisBottom(x)\r\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\r\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\r\n        .tickSize(tickSize)\r\n        .tickValues(tickValues)\r\n    )\r\n    .on('start', () => {\r\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\r\n    })\r\n    .call((g) =>\r\n      g\r\n        .select('.axistext')\r\n        .attr('class', 'axistext')\r\n        .attr('x', marginLeft)\r\n        .attr('y', marginTop + marginBottom - height - 6)\r\n        .attr('fill', 'currentColor')\r\n        .attr('text-anchor', 'start')\r\n        .attr('font-weight', 'bold')\r\n        .text(title)\r\n    );\r\n\r\n  return svg.node();\r\n}\r\n\r\nfunction ramp(color, n = 256) {\r\n  // const canvas = document.createElement('canvas');\r\n  const canvas = d3.select('.color-scale').node();\r\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\r\n    '2d'\r\n  );\r\n  for (let i = 0; i < n; ++i) {\r\n    context.fillStyle = color(i / (n - 1));\r\n    context.fillRect(i, 0, 1, 1);\r\n  }\r\n  return canvas;\r\n}\r\n","import MapLegend from './maplegend';\r\n\r\nimport {MAP_META, MAP_STATISTICS, MAP_TYPES, MAP_VIEWS} from '../constants';\r\nimport {capitalizeAll} from '../utils/commonfunctions';\r\n\r\nimport * as d3 from 'd3';\r\nimport React, {useCallback, useEffect, useMemo, useRef} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport useSWR from 'swr';\r\nimport * as topojson from 'topojson';\r\n\r\nconst colorInterpolator = (caseType, t) => {\r\n  switch (caseType) {\r\n    case 'confirmed':\r\n      return d3.interpolateReds(t * 0.85);\r\n    case 'active':\r\n      return d3.interpolateBlues(t * 0.85);\r\n    case 'recovered':\r\n      return d3.interpolateGreens(t * 0.85);\r\n    case 'deceased':\r\n      return d3.interpolateGreys(t * 0.85);\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nconst caseColor = (caseType, alpha = '') => {\r\n  switch (caseType) {\r\n    case 'confirmed':\r\n      return '#ff073a' + alpha;\r\n    case 'active':\r\n      return '#007bff' + alpha;\r\n    case 'recovered':\r\n      return '#28a745' + alpha;\r\n    case 'deceased':\r\n      return '#6c757d' + alpha;\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nfunction ChoroplethMap({\r\n  statistic,\r\n  mapData,\r\n  currentMap,\r\n  changeMap,\r\n  regionHighlighted,\r\n  setRegionHighlighted,\r\n  mapOption,\r\n  isCountryLoaded,\r\n}) {\r\n  const {t} = useTranslation();\r\n  const svgRef = useRef(null);\r\n\r\n  const mapMeta = MAP_META[currentMap.name];\r\n  const geoDataResponse = useSWR(mapMeta.geoDataFile, async (file) => {\r\n    return await d3.json(file);\r\n  });\r\n\r\n  const mapScale = useMemo(() => {\r\n    if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n      return d3.scaleOrdinal(\r\n        ['Red', 'Orange', 'Green'],\r\n        ['#d73027', '#fee08b', '#66bd63']\r\n      );\r\n    } else if (currentMap.stat === MAP_STATISTICS.HOTSPOTS) {\r\n      const {width} = svgRef.current.getBoundingClientRect();\r\n      return d3\r\n        .scaleSqrt([0, statistic[mapOption].max], [0, width / 10])\r\n        .clamp(true)\r\n        .nice(3);\r\n    } else {\r\n      return d3\r\n        .scaleSequential([0, Math.max(1, statistic[mapOption].max)], (t) =>\r\n          colorInterpolator(mapOption, t)\r\n        )\r\n        .clamp(true);\r\n    }\r\n  }, [currentMap.stat, statistic, mapOption]);\r\n\r\n  useEffect(() => {\r\n    if (!geoDataResponse.data) return;\r\n    const geoData = geoDataResponse.data;\r\n\r\n    const topology = topojson.feature(\r\n      geoData,\r\n      geoData.objects[mapMeta.graphObjectStates || mapMeta.graphObjectDistricts]\r\n    );\r\n\r\n    const svg = d3.select(svgRef.current);\r\n\r\n    if (!svg.attr('viewBox')) {\r\n      const {\r\n        width: widthDefault,\r\n        height: heightDefault,\r\n      } = svgRef.current.getBoundingClientRect();\r\n      const projection = isCountryLoaded\r\n        ? d3.geoMercator().fitWidth(widthDefault, topology)\r\n        : d3.geoMercator().fitSize([widthDefault, heightDefault], topology);\r\n      const path = d3.geoPath(projection);\r\n      const bBox = path.bounds(topology);\r\n      const [width, height] = [+bBox[1][0], bBox[1][1]];\r\n      svg.attr('viewBox', `0 0 ${width} ${height}`);\r\n    }\r\n    const bBox = svg.attr('viewBox').split(' ');\r\n    const [width, height] = [+bBox[2], +bBox[3]];\r\n\r\n    const projection = d3.geoMercator().fitSize([width, height], topology);\r\n    const path = d3.geoPath(projection);\r\n\r\n    // Add id to each feature\r\n    let features =\r\n      currentMap.stat !== MAP_STATISTICS.HOTSPOTS\r\n        ? currentMap.view === MAP_VIEWS.STATES\r\n          ? topojson.feature(\r\n              geoData,\r\n              geoData.objects[mapMeta.graphObjectStates]\r\n            ).features\r\n          : topojson.feature(\r\n              geoData,\r\n              geoData.objects[mapMeta.graphObjectDistricts]\r\n            ).features\r\n        : [\r\n            ...topojson.feature(\r\n              geoData,\r\n              geoData.objects[mapMeta.graphObjectStates]\r\n            ).features,\r\n            ...topojson.feature(\r\n              geoData,\r\n              geoData.objects[mapMeta.graphObjectDistricts]\r\n            ).features,\r\n          ];\r\n\r\n    features = features.map((f) => {\r\n      const district = f.properties.district;\r\n      const state = f.properties.st_nm;\r\n      const obj = Object.assign({}, f);\r\n      obj.id = `${currentMap.name}-${state}${district ? '-' + district : ''}`;\r\n      return obj;\r\n    });\r\n\r\n    /* Draw map */\r\n    const t = d3.transition().duration(500);\r\n    let onceTouchedRegion = null;\r\n    const regionSelection = svg\r\n      .select('.regions')\r\n      .selectAll('path')\r\n      .data(\r\n        currentMap.stat !== MAP_STATISTICS.HOTSPOTS ? features : [],\r\n        (d) => d.id\r\n      )\r\n      .join((enter) => {\r\n        const sel = enter\r\n          .append('path')\r\n          .attr('d', path)\r\n          .attr('stroke-width', 2)\r\n          .attr('stroke-opacity', 0)\r\n          .style('cursor', 'pointer')\r\n          .on('mouseenter', (d) => {\r\n            const region = {state: d.properties.st_nm};\r\n            if (d.properties.district) region.district = d.properties.district;\r\n            setRegionHighlighted(region);\r\n          })\r\n          .on('mouseleave', (d) => {\r\n            if (onceTouchedRegion === d) onceTouchedRegion = null;\r\n          })\r\n          .on('touchstart', (d) => {\r\n            if (onceTouchedRegion === d) onceTouchedRegion = null;\r\n            else onceTouchedRegion = d;\r\n          })\r\n          .on('click', (d) => {\r\n            d3.event.stopPropagation();\r\n            if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE)\r\n              return;\r\n            // Disable pointer events till the new map is rendered\r\n            svg.attr('pointer-events', 'none');\r\n            svg\r\n              .select('.regions')\r\n              .selectAll('path')\r\n              .attr('pointer-events', 'none');\r\n            // Switch map\r\n            changeMap(d.properties.st_nm);\r\n          });\r\n        sel.append('title');\r\n        return sel;\r\n      })\r\n      .attr('pointer-events', 'none');\r\n\r\n    regionSelection\r\n      .transition(t)\r\n      .attr('fill', (d) => {\r\n        let n;\r\n        if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n          const state = d.properties.st_nm;\r\n          const district = d.properties.district;\r\n          n =\r\n            mapData[state] && mapData[state][district]\r\n              ? mapData[state][district]\r\n              : 0;\r\n        } else {\r\n          const state = d.properties.st_nm;\r\n          const district = d.properties.district;\r\n          if (district)\r\n            n =\r\n              mapData[state] &&\r\n              mapData[state][district] &&\r\n              mapData[state][district][mapOption]\r\n                ? mapData[state][district][mapOption]\r\n                : 0;\r\n          else\r\n            n =\r\n              mapData[state] && mapData[state][mapOption]\r\n                ? mapData[state][mapOption]\r\n                : 0;\r\n        }\r\n        const color = n === 0 ? '#ffffff00' : mapScale(n);\r\n        return color;\r\n      })\r\n      .attr(\r\n        'stroke',\r\n        currentMap.stat === MAP_STATISTICS.ZONE\r\n          ? '#343a40'\r\n          : caseColor(mapOption)\r\n      )\r\n      .on('end', function () {\r\n        d3.select(this).attr('pointer-events', 'all');\r\n      });\r\n\r\n    regionSelection.select('title').text((d) => {\r\n      if (currentMap.stat === MAP_STATISTICS.TOTAL) {\r\n        const state = d.properties.st_nm;\r\n        const district = d.properties.district;\r\n        let n;\r\n        if (district)\r\n          n =\r\n            mapData[state] && mapData[state][district]\r\n              ? mapData[state][district][mapOption]\r\n              : 0;\r\n        else n = mapData[state] ? mapData[state][mapOption] : 0;\r\n        return (\r\n          Number(\r\n            parseFloat(\r\n              100 * (n / (statistic[mapOption].total || 0.001))\r\n            ).toFixed(2)\r\n          ).toString() +\r\n          '% from ' +\r\n          capitalizeAll(district ? district : state)\r\n        );\r\n      }\r\n    });\r\n\r\n    svg\r\n      .transition()\r\n      .duration(mapMeta.mapType === MAP_TYPES.STATE ? t.duration() / 2 : 0)\r\n      .on('end', () =>\r\n        svg.attr('class', currentMap.stat === MAP_STATISTICS.ZONE ? 'zone' : '')\r\n      );\r\n\r\n    /* ----------BUBBLE MAP----------*/\r\n    let circlesData = [];\r\n    if (currentMap.stat === MAP_STATISTICS.HOTSPOTS) {\r\n      circlesData = features\r\n        .map((d) => {\r\n          const district = d.properties.district;\r\n          const state = d.properties.st_nm;\r\n          if (district) {\r\n            d.value =\r\n              mapData[state] && mapData[state][district]\r\n                ? mapData[state][district][mapOption]\r\n                : 0;\r\n          } else {\r\n            d.value =\r\n              mapData[state] && mapData[state].Unknown\r\n                ? mapData[state].Unknown[mapOption]\r\n                : 0;\r\n          }\r\n          return d;\r\n        })\r\n        .sort((a, b) => b.value - a.value);\r\n    }\r\n\r\n    svg\r\n      .select('.circles')\r\n      .selectAll('circle')\r\n      .data(circlesData, (d) => d.id)\r\n      .join((enter) =>\r\n        enter\r\n          .append('circle')\r\n          .attr('transform', (d) => `translate(${path.centroid(d)})`)\r\n          .attr('fill-opacity', 0.5)\r\n          .style('cursor', 'pointer')\r\n          .attr('pointer-events', 'all')\r\n          .on('mouseenter', (d) => {\r\n            const region = {\r\n              state: d.properties.st_nm,\r\n              district: d.properties.district || 'Unknown',\r\n            };\r\n            setRegionHighlighted(region);\r\n          })\r\n          .on('click', () => {\r\n            d3.event.stopPropagation();\r\n          })\r\n      )\r\n      .transition(t)\r\n      .attr('fill', caseColor(mapOption, '70'))\r\n      .attr('stroke', caseColor(mapOption, '70'))\r\n      .attr('r', (d) => mapScale(d.value));\r\n    /* ------------------------------*/\r\n\r\n    let meshStates = [];\r\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\r\n      meshStates = [\r\n        topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectStates]),\r\n      ];\r\n      meshStates[0].id = mapMeta.graphObjectStates;\r\n    }\r\n    let meshDistricts = [];\r\n    if (currentMap.view === MAP_VIEWS.DISTRICTS) {\r\n      // Add id to mesh\r\n      meshDistricts = [\r\n        topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectDistricts]),\r\n      ];\r\n      meshDistricts[0].id = mapMeta.graphObjectDistricts;\r\n    }\r\n\r\n    svg\r\n      .select(\r\n        currentMap.view === MAP_VIEWS.STATES\r\n          ? '.state-borders'\r\n          : '.district-borders'\r\n      )\r\n      .attr('fill', 'none')\r\n      .attr('stroke-width', function () {\r\n        return mapMeta.mapType === MAP_TYPES.COUNTRY &&\r\n          currentMap.view === MAP_VIEWS.DISTRICTS\r\n          ? 0\r\n          : width / 250;\r\n      })\r\n      .selectAll('path')\r\n      .data(\r\n        currentMap.view === MAP_VIEWS.STATES ? meshStates : meshDistricts,\r\n        (d) => d.id\r\n      )\r\n      .join((enter) => enter.append('path').attr('d', path))\r\n      .transition(t)\r\n      .attr('stroke', () => {\r\n        if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n          return '#00000060';\r\n        } else {\r\n          return caseColor(mapOption, '30');\r\n        }\r\n      });\r\n\r\n    svg\r\n      .select(\r\n        currentMap.view === MAP_VIEWS.STATES\r\n          ? '.district-borders'\r\n          : '.state-borders'\r\n      )\r\n      .selectAll('path')\r\n      .data(\r\n        currentMap.view === MAP_VIEWS.STATES ? meshDistricts : meshStates,\r\n        (d) => d.id\r\n      )\r\n      .join((enter) =>\r\n        enter\r\n          .append('path')\r\n          .attr('d', path)\r\n          .attr('fill', 'none')\r\n          .attr('stroke-width', width / 250)\r\n      )\r\n      .transition(t)\r\n      .attr('stroke', '#343a4099');\r\n\r\n    // Reset on tapping outside map\r\n    svg.attr('pointer-events', 'auto').on('click', () => {\r\n      if (mapMeta.mapType !== MAP_TYPES.STATE) {\r\n        setRegionHighlighted({\r\n          state: 'Total',\r\n        });\r\n      }\r\n    });\r\n  }, [\r\n    geoDataResponse.data,\r\n    mapMeta,\r\n    currentMap,\r\n    setRegionHighlighted,\r\n    changeMap,\r\n    isCountryLoaded,\r\n    mapScale,\r\n    statistic,\r\n    mapData,\r\n    mapOption,\r\n  ]);\r\n\r\n  const highlightRegionInMap = useCallback(\r\n    (state, district) => {\r\n      const svg = d3.select(svgRef.current);\r\n      if (currentMap.stat === MAP_STATISTICS.HOTSPOTS) {\r\n        svg\r\n          .select('.circles')\r\n          .selectAll('circle')\r\n          .attr('fill-opacity', (d) => {\r\n            const highlighted =\r\n              district &&\r\n              state === d.properties.st_nm &&\r\n              (district === d.properties.district ||\r\n                (district === 'Unknown' && !d.properties.district));\r\n            return highlighted ? 1 : 0.5;\r\n          });\r\n      } else {\r\n        svg\r\n          .select('.regions')\r\n          .selectAll('path')\r\n          .each(function (d) {\r\n            const highlighted =\r\n              district === d.properties?.district &&\r\n              state === d.properties.st_nm;\r\n            if (highlighted) this.parentNode.appendChild(this);\r\n            d3.select(this).attr('stroke-opacity', highlighted ? 1 : 0);\r\n          });\r\n      }\r\n    },\r\n    [currentMap.stat]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!geoDataResponse.data) return;\r\n    highlightRegionInMap(regionHighlighted.state, regionHighlighted.district);\r\n  }, [\r\n    geoDataResponse.data,\r\n    highlightRegionInMap,\r\n    regionHighlighted.state,\r\n    regionHighlighted.district,\r\n    mapOption,\r\n  ]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\r\n        <svg id=\"chart\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\r\n          <g className=\"regions\" />\r\n          <g className=\"state-borders\" />\r\n          {currentMap.view === MAP_VIEWS.DISTRICTS && (\r\n            <g className=\"district-borders\" />\r\n          )}\r\n          {currentMap.stat === MAP_STATISTICS.HOTSPOTS && (\r\n            <g className=\"circles\" />\r\n          )}\r\n        </svg>\r\n        {mapMeta.mapType === MAP_TYPES.STATE &&\r\n        mapData[currentMap.name]?.Unknown &&\r\n        mapData[currentMap.name]?.Unknown[mapOption] ? (\r\n          <div className=\"disclaimer\">\r\n            <Icon.AlertCircle />\r\n            {t('District-wise {{mapOption}} numbers are under reconciliation', {\r\n              mapOption: t(mapOption),\r\n            })}\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n\r\n      {mapScale && (\r\n        <MapLegend\r\n          mapScale={mapScale}\r\n          statistic={statistic}\r\n          mapStatistic={currentMap.stat}\r\n          mapOption={mapOption}\r\n        />\r\n      )}\r\n\r\n      <svg style={{position: 'absolute', height: 0}}>\r\n        <defs>\r\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\r\n            <feColorMatrix\r\n              type=\"matrix\"\r\n              values=\"0.91372549  0           0            0  0.08627451\r\n                      0           0.91372549  0            0  0.08627451\r\n                      0           0           0.854901961  0  0.145098039\r\n                      0           0           0            1  0\"\r\n            />\r\n          </filter>\r\n        </defs>\r\n      </svg>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ChoroplethMap;\r\n","import ChoroplethMap from './choropleth';\r\nimport {testedToolTip} from './tooltips';\r\n\r\nimport {\r\n  MAP_META,\r\n  MAP_STATISTICS,\r\n  MAP_TYPES,\r\n  MAP_VIEWS,\r\n  STATE_CODES_REVERSE,\r\n  STATE_POPULATIONS,\r\n} from '../constants';\r\nimport {\r\n  formatDate,\r\n  formatNumber,\r\n  formatDayMonth,\r\n  formatLastUpdated,\r\n} from '../utils/commonfunctions';\r\n\r\nimport {parse} from 'date-fns';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useState, useEffect, useMemo, useCallback} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (!equal(prevProps.regionHighlighted, currProps.regionHighlighted)) {\r\n    return false;\r\n  }\r\n  if (!equal(prevProps.mapOption, currProps.mapOption)) {\r\n    return false;\r\n  }\r\n  if (!equal(prevProps.anchor, currProps.anchor)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst getRegionFromState = (state) => {\r\n  if (!state) return;\r\n  const region = {...state};\r\n  return region;\r\n};\r\n\r\nconst getRegionFromDistrict = (districtData, name) => {\r\n  if (!districtData) return;\r\n  const region = {...districtData};\r\n  return region;\r\n};\r\n\r\nfunction MapExplorer({\r\n  mapName,\r\n  states,\r\n  districts,\r\n  zones,\r\n  stateTestData,\r\n  regionHighlighted,\r\n  setRegionHighlighted,\r\n  anchor,\r\n  setAnchor,\r\n  mapOption,\r\n  setMapOption,\r\n  isCountryLoaded = true,\r\n}) {\r\n  const {t} = useTranslation();\r\n  const [currentMap, setCurrentMap] = useState({\r\n    name: mapName,\r\n    stat: MAP_STATISTICS.TOTAL,\r\n    view:\r\n      MAP_META[mapName].mapType === MAP_TYPES.COUNTRY\r\n        ? MAP_VIEWS.STATES\r\n        : MAP_VIEWS.DISTRICTS,\r\n  });\r\n  const currentMapMeta = MAP_META[currentMap.name];\r\n\r\n  const [statistic, currentMapData] = useMemo(() => {\r\n    let currentMapData = {};\r\n    let statistic = {};\r\n    if (currentMap.stat === MAP_STATISTICS.ZONE) {\r\n      const dataTypes = ['Red', 'Orange', 'Green'];\r\n      statistic = dataTypes.reduce((acc, dtype) => {\r\n        acc[dtype] = 0;\r\n        return acc;\r\n      }, {});\r\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY) {\r\n        currentMapData = Object.keys(zones).reduce((acc1, state) => {\r\n          acc1[state] = Object.keys(zones[state]).reduce((acc2, district) => {\r\n            const zone = zones[state][district].zone;\r\n            if (zone) {\r\n              acc2[district] = zone;\r\n              statistic[zone] += 1;\r\n            }\r\n            return acc2;\r\n          }, {});\r\n          return acc1;\r\n        }, {});\r\n      } else if (currentMapMeta.mapType === MAP_TYPES.STATE) {\r\n        const state = currentMap.name;\r\n        currentMapData[state] = Object.keys(zones[state]).reduce(\r\n          (acc, district) => {\r\n            const zone = zones[state][district].zone;\r\n            if (zone) {\r\n              acc[district] = zone;\r\n              statistic[zone] += 1;\r\n            }\r\n            return acc;\r\n          },\r\n          {}\r\n        );\r\n      }\r\n    } else {\r\n      const dataTypes = ['confirmed', 'active', 'recovered', 'deceased'];\r\n      statistic = dataTypes.reduce((acc, dtype) => {\r\n        acc[dtype] = {total: 0, max: 0};\r\n        return acc;\r\n      }, {});\r\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY) {\r\n        if (currentMap.view === MAP_VIEWS.STATES) {\r\n          currentMapData = states.reduce((acc, state) => {\r\n            acc[state.state] = {};\r\n            dataTypes.forEach((dtype) => {\r\n              let typeCount =\r\n                parseInt(state[dtype !== 'deceased' ? dtype : 'deaths']) || 0;\r\n              if (currentMap.stat === MAP_STATISTICS.PER_MILLION)\r\n                typeCount = (1e6 * typeCount) / STATE_POPULATIONS[state.state];\r\n              if (state.state !== 'Total') {\r\n                statistic[dtype].total += typeCount;\r\n                if (typeCount > statistic[dtype].max) {\r\n                  statistic[dtype].max = typeCount;\r\n                }\r\n              }\r\n              acc[state.state][dtype] = typeCount;\r\n            });\r\n            return acc;\r\n          }, {});\r\n        } else {\r\n          currentMapData = Object.keys(districts).reduce((acc1, state) => {\r\n            const districtWiseData = (districts[state] || {districtData: {}})\r\n              .districtData;\r\n            acc1[state] = Object.keys(districtWiseData).reduce(\r\n              (acc2, district) => {\r\n                acc2[district] = {};\r\n                dataTypes.forEach((dtype) => {\r\n                  const typeCount = parseInt(districtWiseData[district][dtype]);\r\n                  statistic[dtype].total += typeCount;\r\n                  if (typeCount > statistic[dtype].max) {\r\n                    statistic[dtype].max = typeCount;\r\n                  }\r\n                  acc2[district][dtype] = typeCount;\r\n                });\r\n                return acc2;\r\n              },\r\n              {}\r\n            );\r\n            return acc1;\r\n          }, {});\r\n        }\r\n      } else if (currentMapMeta.mapType === MAP_TYPES.STATE) {\r\n        const districtWiseData = (\r\n          districts[currentMap.name] || {districtData: {}}\r\n        ).districtData;\r\n        currentMapData[currentMap.name] = Object.keys(districtWiseData).reduce(\r\n          (acc, district) => {\r\n            acc[district] = {};\r\n            dataTypes.forEach((dtype) => {\r\n              const typeCount = parseInt(districtWiseData[district][dtype]);\r\n              statistic[dtype].total += typeCount;\r\n              if (typeCount > statistic[dtype].max) {\r\n                statistic[dtype].max = typeCount;\r\n              }\r\n              acc[district][dtype] = typeCount;\r\n            });\r\n            return acc;\r\n          },\r\n          {}\r\n        );\r\n        currentMapData[currentMap.name].Total = {};\r\n        const stateData = states.find(\r\n          (state) => currentMap.name === state.state\r\n        );\r\n        dataTypes.forEach((dtype) => {\r\n          currentMapData[currentMap.name].Total[dtype] =\r\n            parseInt(stateData[dtype !== 'deceased' ? dtype : 'deaths']) || 0;\r\n        });\r\n      }\r\n    }\r\n    return [statistic, currentMapData];\r\n  }, [currentMap, currentMapMeta.mapType, districts, zones, states]);\r\n\r\n  const [hoveredRegion, panelRegion] = useMemo(() => {\r\n    if (!regionHighlighted.district) {\r\n      const state = getRegionFromState(\r\n        states.find((state) => regionHighlighted.state === state.state)\r\n      );\r\n      return [state, state];\r\n    } else {\r\n      const stateDistrictObj = districts[regionHighlighted.state] || {\r\n        districtData: {},\r\n      };\r\n      const districtData = stateDistrictObj.districtData[\r\n        regionHighlighted.district\r\n      ] || {\r\n        confirmed: 0,\r\n        active: 0,\r\n        recovered: 0,\r\n        deaths: 0,\r\n      };\r\n      const district = getRegionFromDistrict(\r\n        districtData,\r\n        regionHighlighted.district\r\n      );\r\n      let state = getRegionFromState(\r\n        states.find((state) => state.state === regionHighlighted.state)\r\n      );\r\n      district.district = regionHighlighted.district;\r\n      district.state = state.state;\r\n      if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\r\n        state = states.find((state) => state.state === 'Total');\r\n      return [district, state];\r\n    }\r\n  }, [\r\n    states,\r\n    districts,\r\n    currentMapMeta.mapType,\r\n    regionHighlighted.state,\r\n    regionHighlighted.district,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (regionHighlighted.district) {\r\n      if (\r\n        currentMap.name !== regionHighlighted.state &&\r\n        !(\r\n          currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\r\n          currentMap.view === MAP_VIEWS.DISTRICTS\r\n        )\r\n      ) {\r\n        const state = regionHighlighted.state;\r\n        const newMapMeta = MAP_META[state];\r\n        if (!newMapMeta) {\r\n          return;\r\n        }\r\n        setCurrentMap({\r\n          name: state,\r\n          view: MAP_VIEWS.DISTRICTS,\r\n          stat:\r\n            currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n              ? MAP_STATISTICS.TOTAL\r\n              : currentMap.stat,\r\n        });\r\n      }\r\n    } else if (isCountryLoaded && currentMapMeta.mapType === MAP_TYPES.STATE) {\r\n      setCurrentMap({\r\n        name: 'India',\r\n        view:\r\n          currentMap.stat === MAP_STATISTICS.ZONE\r\n            ? MAP_VIEWS.DISTRICTS\r\n            : MAP_VIEWS.STATES,\r\n        stat: currentMap.stat,\r\n      });\r\n    }\r\n  }, [\r\n    isCountryLoaded,\r\n    regionHighlighted.state,\r\n    regionHighlighted.district,\r\n    currentMap,\r\n    currentMapMeta.mapType,\r\n  ]);\r\n\r\n  const switchMapToState = useCallback(\r\n    (state) => {\r\n      const newMapMeta = MAP_META[state];\r\n      if (!newMapMeta) {\r\n        return;\r\n      }\r\n      if (newMapMeta.mapType === MAP_TYPES.STATE) {\r\n        const {districtData} = districts[state] || {\r\n          districtData: {},\r\n        };\r\n        const topDistrict = Object.keys(districtData)\r\n          .filter((state) => state !== 'Unknown')\r\n          .sort((a, b) => {\r\n            return districtData[b].confirmed - districtData[a].confirmed;\r\n          })[0];\r\n        ReactDOM.unstable_batchedUpdates(() => {\r\n          setRegionHighlighted({\r\n            district: topDistrict,\r\n            state: state,\r\n          });\r\n          setCurrentMap({\r\n            name: state,\r\n            view: MAP_VIEWS.DISTRICTS,\r\n            stat:\r\n              currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n                ? MAP_STATISTICS.TOTAL\r\n                : currentMap.stat,\r\n          });\r\n        });\r\n      } else {\r\n        ReactDOM.unstable_batchedUpdates(() => {\r\n          setCurrentMap({\r\n            name: 'India',\r\n            view:\r\n              currentMap.stat === MAP_STATISTICS.ZONE\r\n                ? MAP_VIEWS.DISTRICTS\r\n                : MAP_VIEWS.STATES,\r\n            stat: currentMap.stat,\r\n          });\r\n          setRegionHighlighted({\r\n            state: 'Total',\r\n          });\r\n        });\r\n      }\r\n    },\r\n    [currentMap.stat, districts, setRegionHighlighted]\r\n  );\r\n\r\n  const testObj = stateTestData[panelRegion.state];\r\n\r\n  let hoveredRegionCount;\r\n  let hoveredRegionZone;\r\n  if (currentMap.stat !== MAP_STATISTICS.ZONE) {\r\n    const data =\r\n      hoveredRegion.district && currentMapData[hoveredRegion.state]\r\n        ? currentMapData[hoveredRegion.state][hoveredRegion.district]\r\n        : hoveredRegion.state !== currentMap.name\r\n        ? currentMapData[hoveredRegion.state]\r\n        : currentMapData[hoveredRegion.state].Total;\r\n    hoveredRegionCount = data\r\n      ? currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n        ? Number(parseFloat(data[mapOption]).toFixed(2))\r\n        : data[mapOption]\r\n      : 0;\r\n  } else {\r\n    hoveredRegionZone =\r\n      zones[hoveredRegion.state] &&\r\n      zones[hoveredRegion.state][hoveredRegion.district]\r\n        ? zones[hoveredRegion.state][hoveredRegion.district].zone\r\n        : '';\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`MapExplorer fadeInUp ${\r\n        anchor === 'mapexplorer' ? 'stickied' : ''\r\n      }`}\r\n      style={{\r\n        animationDelay: '1.5s',\r\n        display: anchor === 'timeseries' ? 'none' : '',\r\n      }}\r\n    >\r\n      {window.innerWidth > 769 && (\r\n        <div\r\n          className={`anchor ${anchor === 'mapexplorer' ? 'stickied' : ''}`}\r\n          onClick={() => {\r\n            setAnchor(anchor === 'mapexplorer' ? null : 'mapexplorer');\r\n          }}\r\n        >\r\n          <Icon.Anchor />\r\n        </div>\r\n      )}\r\n      <div className=\"header\">\r\n        <h1>\r\n          {t(currentMap.name)} {t('Map')}\r\n        </h1>\r\n        <h6>\r\n          {t('{{action}} over a {{mapType}} for more details', {\r\n            action: t(window.innerWidth <= 769 ? 'Tap' : 'Hover'),\r\n            mapType: t(\r\n              currentMapMeta.mapType === MAP_TYPES.COUNTRY\r\n                ? 'state/UT'\r\n                : 'District'\r\n            ),\r\n          })}\r\n        </h6>\r\n      </div>\r\n\r\n      <div className=\"map-stats\">\r\n        <div\r\n          className={`stats fadeInUp ${\r\n            mapOption === 'confirmed' ? 'focused' : ''\r\n          }`}\r\n          style={{animationDelay: '2s'}}\r\n          onClick={() => setMapOption('confirmed')}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? t('Cnfmd') : t('Confirmed')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\r\n            <h6>{`+${formatNumber(panelRegion.deltaconfirmed)}`}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`stats is-blue fadeInUp ${\r\n            mapOption === 'active' ? 'focused' : ''\r\n          }`}\r\n          style={{animationDelay: '2.1s'}}\r\n          onClick={() => setMapOption('active')}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? t('Actv') : t('Active')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.active)}</h1>\r\n            <h6>{` `}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`stats is-green fadeInUp ${\r\n            mapOption === 'recovered' ? 'focused' : ''\r\n          }`}\r\n          style={{animationDelay: '2.2s'}}\r\n          onClick={() => setMapOption('recovered')}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? t('Rcvrd') : t('Recovered')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\r\n            <h6>{`+${formatNumber(panelRegion.deltarecovered)}`}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`stats is-gray fadeInUp ${\r\n            mapOption === 'deceased' ? 'focused' : ''\r\n          }`}\r\n          style={{animationDelay: '2.3s'}}\r\n          onClick={() => setMapOption('deceased')}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? t('Dcsd') : t('Deceased')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\r\n            <h6>{`+${formatNumber(panelRegion.deltadeaths)}`}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"stats is-purple tested fadeInUp\"\r\n          style={{animationDelay: '2.4s'}}\r\n        >\r\n          <h5>{t('Tested')}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(testObj?.totaltested)}</h1>\r\n          </div>\r\n          <h6 className=\"timestamp\">\r\n            {!isNaN(parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()))\r\n              ? t('As of {{date}}', {\r\n                  date: formatDayMonth(testObj?.updatedon),\r\n                })\r\n              : ''}\r\n          </h6>\r\n          {testObj?.totaltested?.length > 1 && (\r\n            <a href={testObj.source} target=\"_noblank\">\r\n              <Icon.Link />\r\n            </a>\r\n          )}\r\n          {panelRegion.state === 'Total' ? testedToolTip : ''}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\r\n        <h2\r\n          className={`${\r\n            currentMap.stat !== MAP_STATISTICS.ZONE\r\n              ? mapOption !== 'confirmed'\r\n                ? mapOption\r\n                : ''\r\n              : hoveredRegionZone\r\n          }`}\r\n        >\r\n          {hoveredRegion.district\r\n            ? t(hoveredRegion.district) +\r\n              (hoveredRegion.district === 'Unknown'\r\n                ? ` (${t(hoveredRegion.state)})`\r\n                : '')\r\n            : t(hoveredRegion.state)}\r\n        </h2>\r\n\r\n        {currentMapMeta.mapType !== MAP_TYPES.STATE &&\r\n          panelRegion.lastupdatedtime && (\r\n            <div className=\"last-update\">\r\n              <h6>{t('Last updated')}</h6>\r\n              <h3>\r\n                {isNaN(Date.parse(formatDate(panelRegion.lastupdatedtime)))\r\n                  ? ''\r\n                  : formatLastUpdated(panelRegion.lastupdatedtime) +\r\n                    ' ' +\r\n                    t('ago')}\r\n              </h3>\r\n            </div>\r\n          )}\r\n\r\n        {currentMapMeta.mapType === MAP_TYPES.STATE ? (\r\n          <Link to={`state/${STATE_CODES_REVERSE[panelRegion.state]}`}>\r\n            <div className=\"button state-page-button\">\r\n              <abbr>{t('Visit state page')}</abbr>\r\n              <Icon.ArrowRightCircle />\r\n            </div>\r\n          </Link>\r\n        ) : null}\r\n\r\n        {currentMap.stat !== MAP_STATISTICS.ZONE &&\r\n        (currentMapMeta.mapType === MAP_TYPES.STATE ||\r\n          (currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\r\n            currentMap.stat !== MAP_STATISTICS.TOTAL)) &&\r\n        (currentMap.stat !== MAP_STATISTICS.HOTSPOTS ||\r\n          hoveredRegion?.district) ? (\r\n          <h1\r\n            className={`district ${mapOption !== 'confirmed' ? mapOption : ''}`}\r\n          >\r\n            {hoveredRegionCount}\r\n            <br />\r\n            <span>\r\n              {t(mapOption)}{' '}\r\n              {currentMap.stat === MAP_STATISTICS.PER_MILLION\r\n                ? ` ${t('per million')}`\r\n                : ''}\r\n            </span>\r\n          </h1>\r\n        ) : null}\r\n\r\n        {currentMapMeta.mapType === MAP_TYPES.STATE ? (\r\n          <div\r\n            className=\"button back-button\"\r\n            onClick={() => switchMapToState('India')}\r\n          >\r\n            {t('Back')}\r\n          </div>\r\n        ) : null}\r\n\r\n        {currentMapMeta.mapType === MAP_TYPES.STATE &&\r\n        currentMapData.Unknown &&\r\n        currentMapData.Unknown[mapOption] > 0 ? (\r\n          <h4 className=\"unknown\">\r\n            {t('Districts unknown for')} {currentMapData.Unknown[mapOption]}{' '}\r\n            {t('people')}\r\n          </h4>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div>\r\n        {mapOption && (\r\n          <ChoroplethMap\r\n            statistic={statistic}\r\n            currentMap={currentMap}\r\n            mapData={currentMapData}\r\n            regionHighlighted={regionHighlighted}\r\n            setRegionHighlighted={setRegionHighlighted}\r\n            changeMap={switchMapToState}\r\n            mapOption={mapOption}\r\n            isCountryLoaded={isCountryLoaded}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"tabs-map\">\r\n        <div\r\n          className={`tab ${\r\n            currentMap.stat === MAP_STATISTICS.TOTAL ? 'focused' : ''\r\n          }`}\r\n          onClick={() => {\r\n            setCurrentMap({\r\n              name: currentMap.name,\r\n              view:\r\n                currentMapMeta.mapType === MAP_TYPES.COUNTRY\r\n                  ? MAP_VIEWS.STATES\r\n                  : MAP_VIEWS.DISTRICTS,\r\n              stat: MAP_STATISTICS.TOTAL,\r\n            });\r\n            if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\r\n              setRegionHighlighted({\r\n                state: regionHighlighted.state,\r\n              });\r\n          }}\r\n        >\r\n          <h4>{t('Total Cases')}</h4>\r\n        </div>\r\n        {isCountryLoaded && (\r\n          <div\r\n            className={`tab ${\r\n              currentMap.stat === MAP_STATISTICS.PER_MILLION ? 'focused' : ''\r\n            }`}\r\n            onClick={() => {\r\n              if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\r\n              setCurrentMap({\r\n                name: currentMap.name,\r\n                view: MAP_VIEWS.STATES,\r\n                stat: MAP_STATISTICS.PER_MILLION,\r\n              });\r\n              setRegionHighlighted({\r\n                state: regionHighlighted.state,\r\n              });\r\n            }}\r\n          >\r\n            <h4>\r\n              {t('Cases per million')}\r\n              <sup>&dagger;</sup>\r\n            </h4>\r\n          </div>\r\n        )}\r\n        {isCountryLoaded && (\r\n          <div\r\n            className={`tab ${\r\n              currentMap.stat === MAP_STATISTICS.HOTSPOTS ? 'focused' : ''\r\n            }`}\r\n            onClick={() => {\r\n              if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\r\n              setCurrentMap({\r\n                name: currentMap.name,\r\n                view: MAP_VIEWS.DISTRICTS,\r\n                stat: MAP_STATISTICS.HOTSPOTS,\r\n              });\r\n            }}\r\n          >\r\n            <h4>{t('Hotspots')}</h4>\r\n          </div>\r\n        )}\r\n        {/* <div\r\n          className={`tab ${\r\n            currentMap.stat === MAP_STATISTICS.ZONE ? 'focused' : ''\r\n          }`}\r\n          onClick={() => {\r\n            setCurrentMap({\r\n              name: currentMap.name,\r\n              view: MAP_VIEWS.DISTRICTS,\r\n              stat: MAP_STATISTICS.ZONE,\r\n            });\r\n            if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\r\n              setRegionHighlighted({\r\n                state: 'Total',\r\n              });\r\n          }}\r\n        >\r\n          <h4>{t('Zones')}</h4>\r\n        </div>*/}\r\n      </div>\r\n\r\n      <h6 className=\"footnote table-fineprint\">\r\n        &dagger; {t('Based on 2019 population projection by NCP') + ' ('}\r\n        <a\r\n          href=\"https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\"\r\n          target=\"_noblank\"\r\n          style={{color: '#6c757d'}}\r\n        >\r\n          {t('source')}\r\n        </a>\r\n        )\r\n      </h6>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MapExplorer, isEqual);\r\n","import {testedToolTip} from './tooltips';\r\n\r\nimport {\r\n  sliceTimeseriesFromEnd,\r\n  formatNumber,\r\n  formatTimeseriesDate,\r\n  formatTimeseriesTickX,\r\n} from '../utils/commonfunctions';\r\nimport {useResizeObserver} from '../utils/hooks';\r\n\r\nimport * as d3 from 'd3';\r\nimport {addDays, subDays} from 'date-fns';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (!currProps.isIntersecting) return true;\r\n  if (!prevProps.isIntersecting) return false;\r\n  if (!equal(currProps.chartType, prevProps.chartType)) {\r\n    return false;\r\n  }\r\n  if (!equal(currProps.mode, prevProps.mode)) {\r\n    return false;\r\n  }\r\n  if (!equal(currProps.logMode, prevProps.logMode)) {\r\n    return false;\r\n  }\r\n  if (!equal(currProps.stateCode, prevProps.stateCode)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction TimeSeries({timeseriesProp, chartType, mode, logMode, stateCode}) {\r\n  const {t} = useTranslation();\r\n  const [lastDaysCount, setLastDaysCount] = useState(\r\n    window.innerWidth > 512 ? Infinity : 30\r\n  );\r\n  const [timeseries, setTimeseries] = useState({});\r\n  const [datapoint, setDatapoint] = useState({});\r\n  const [index, setIndex] = useState(0);\r\n  const [moving, setMoving] = useState(false);\r\n\r\n  const svgRef1 = useRef();\r\n  const svgRef2 = useRef();\r\n  const svgRef3 = useRef();\r\n  const svgRef4 = useRef();\r\n  const svgRef5 = useRef();\r\n\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  const transformTimeSeries = useCallback(\r\n    (timeseries) => {\r\n      if (timeseries.length > 1) {\r\n        const slicedTimeseries = sliceTimeseriesFromEnd(\r\n          timeseries,\r\n          lastDaysCount\r\n        );\r\n        setIndex(slicedTimeseries.length - 1);\r\n        setTimeseries(slicedTimeseries);\r\n      }\r\n    },\r\n    [lastDaysCount]\r\n  );\r\n\r\n  useEffect(() => {\r\n    transformTimeSeries(timeseriesProp);\r\n  }, [lastDaysCount, timeseriesProp, transformTimeSeries]);\r\n\r\n  const graphData = useCallback(\r\n    (timeseries) => {\r\n      const {width, height} =\r\n        dimensions || wrapperRef.current.getBoundingClientRect();\r\n\r\n      // Margins\r\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\r\n      const chartRight = width - margin.right;\r\n      const chartBottom = height - margin.bottom;\r\n\r\n      const T = timeseries.length;\r\n      const yBufferTop = 1.2;\r\n      const yBufferBottom = 1.1;\r\n\r\n      setDatapoint(timeseries[T - 1]);\r\n      setIndex(T - 1);\r\n\r\n      const svg1 = d3.select(svgRef1.current);\r\n      const svg2 = d3.select(svgRef2.current);\r\n      const svg3 = d3.select(svgRef3.current);\r\n      const svg4 = d3.select(svgRef4.current);\r\n      const svg5 = d3.select(svgRef5.current);\r\n\r\n      const dateMin = subDays(timeseries[0].date, 1);\r\n      const dateMax = addDays(timeseries[T - 1].date, 1);\r\n\r\n      const xScale = d3\r\n        .scaleTime()\r\n        .clamp(true)\r\n        .domain([dateMin, dateMax])\r\n        .range([margin.left, chartRight]);\r\n\r\n      // Number of x-axis ticks\r\n      const numTicksX = width < 480 ? 4 : 7;\r\n\r\n      const xAxis = (g) =>\r\n        g.attr('class', 'x-axis').call(\r\n          d3\r\n            .axisBottom(xScale)\r\n            .ticks(numTicksX)\r\n            .tickFormat((tick) => {\r\n              return formatTimeseriesTickX(tick);\r\n            })\r\n        );\r\n\r\n      const xAxis2 = (g, yScale) => {\r\n        g.attr('class', 'x-axis2')\r\n          .call(d3.axisBottom(xScale).tickValues([]).tickSize(0))\r\n          .select('.domain')\r\n          .style('transform', `translateY(${yScale(0)}px)`);\r\n\r\n        if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\r\n        else g.select('.domain').attr('opacity', 0);\r\n      };\r\n\r\n      const yAxis = (g, yScale) =>\r\n        g\r\n          .attr('class', 'y-axis')\r\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(4));\r\n\r\n      // Arrays of objects\r\n      const plotTotal = chartType === 1;\r\n      const dataTypesTotal = [\r\n        'totalconfirmed',\r\n        'totalactive',\r\n        'totalrecovered',\r\n        'totaldeceased',\r\n        'totaltested',\r\n      ];\r\n      const dataTypesDaily = [\r\n        'dailyconfirmed',\r\n        'dailyactive',\r\n        'dailyrecovered',\r\n        'dailydeceased',\r\n        'dailytested',\r\n      ];\r\n\r\n      const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d', '#201aa2'];\r\n\r\n      const svgArray = [svg1, svg2, svg3, svg4, svg5];\r\n\r\n      let yScales;\r\n      if (plotTotal) {\r\n        const uniformScaleMin = d3.min(timeseries, (d) =>\r\n          Math.min(d.totalactive, d.totalrecovered, d.totaldeceased)\r\n        );\r\n        const uniformScaleMax = d3.max(timeseries, (d) => d.totalconfirmed);\r\n        const yScaleUniformLinear = d3\r\n          .scaleLinear()\r\n          .clamp(true)\r\n          .domain([uniformScaleMin, Math.max(1, yBufferTop * uniformScaleMax)])\r\n          .nice(4)\r\n          .range([chartBottom, margin.top]);\r\n\r\n        const yScaleUniformLog = d3\r\n          .scaleLog()\r\n          .clamp(true)\r\n          .domain([\r\n            Math.max(1, uniformScaleMin),\r\n            Math.max(10, yBufferTop * uniformScaleMax),\r\n          ])\r\n          .nice(4)\r\n          .range([chartBottom, margin.top]);\r\n\r\n        yScales = dataTypesTotal.map((type) => {\r\n          const yScaleLinear = d3\r\n            .scaleLinear()\r\n            .clamp(true)\r\n            .domain([\r\n              d3.min(timeseries, (d) => d[type]),\r\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\r\n            ])\r\n            .nice(4)\r\n            .range([chartBottom, margin.top]);\r\n          const yScaleLog = d3\r\n            .scaleLog()\r\n            .clamp(true)\r\n            .domain([\r\n              Math.max(\r\n                1,\r\n                d3.min(timeseries, (d) => d[type])\r\n              ),\r\n              Math.max(10, yBufferTop * d3.max(timeseries, (d) => d[type])),\r\n            ])\r\n            .nice(4)\r\n            .range([chartBottom, margin.top]);\r\n          if (mode && type !== 'totaltested')\r\n            return logMode ? yScaleUniformLog : yScaleUniformLinear;\r\n          else return logMode ? yScaleLog : yScaleLinear;\r\n        });\r\n      } else {\r\n        const yScaleDailyUniform = d3\r\n          .scaleLinear()\r\n          .clamp(true)\r\n          .domain([\r\n            yBufferBottom *\r\n              Math.min(\r\n                0,\r\n                d3.min(timeseries, (d) => d.dailyactive)\r\n              ),\r\n            Math.max(\r\n              1,\r\n              yBufferTop *\r\n                d3.max(timeseries, (d) =>\r\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\r\n                )\r\n            ),\r\n          ])\r\n          .nice(4)\r\n          .range([chartBottom, margin.top]);\r\n\r\n        yScales = dataTypesDaily.map((type) => {\r\n          if (mode && type !== 'dailytested') return yScaleDailyUniform;\r\n          const yScaleLinear = d3\r\n            .scaleLinear()\r\n            .clamp(true)\r\n            .domain([\r\n              yBufferBottom *\r\n                Math.min(\r\n                  0,\r\n                  d3.min(timeseries, (d) => d[type])\r\n                ),\r\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\r\n            ])\r\n            .nice(4)\r\n            .range([chartBottom, margin.top]);\r\n          return yScaleLinear;\r\n        });\r\n      }\r\n\r\n      /* Focus dots */\r\n      const focus = svgArray.map((svg, i) => {\r\n        return svg\r\n          .selectAll('.focus')\r\n          .data([timeseries[T - 1]], (d) => d.date)\r\n          .join((enter) =>\r\n            enter.append('circle').attr('cx', (d) => xScale(d.date))\r\n          )\r\n          .attr('class', 'focus')\r\n          .attr('fill', colors[i])\r\n          .attr('stroke', colors[i])\r\n          .attr('r', 4);\r\n      });\r\n\r\n      function mousemove() {\r\n        const xm = d3.mouse(this)[0];\r\n        const date = xScale.invert(xm);\r\n        const bisectDate = d3.bisector((d) => d.date).left;\r\n        let i = bisectDate(timeseries, date, 1);\r\n        if (0 <= i && i < T) {\r\n          if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\r\n          setDatapoint(timeseries[i]);\r\n          setIndex(i);\r\n          setMoving(true);\r\n          const d = timeseries[i];\r\n          focus.forEach((f, j) => {\r\n            const yScale = yScales[j];\r\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\r\n            if (!isNaN(d[type]))\r\n              f.attr('cx', xScale(d.date))\r\n                .attr('cy', yScale(d[type]))\r\n                .attr('opacity', 1);\r\n            else f.attr('opacity', 0);\r\n          });\r\n        }\r\n      }\r\n\r\n      function mouseout() {\r\n        setDatapoint(timeseries[T - 1]);\r\n        setIndex(T - 1);\r\n        setMoving(false);\r\n        focus.forEach((f, j) => {\r\n          const yScale = yScales[j];\r\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\r\n          if (!isNaN(timeseries[T - 1][type]))\r\n            f.attr('cx', xScale(timeseries[T - 1].date))\r\n              .attr('cy', yScale(timeseries[T - 1][type]))\r\n              .attr('opacity', 1);\r\n          else f.attr('opacity', 0);\r\n        });\r\n      }\r\n\r\n      /* Begin drawing charts */\r\n      svgArray.forEach((svg, i) => {\r\n        // Transition interval\r\n        const t = svg.transition().duration(500);\r\n        const typeTotal = dataTypesTotal[i];\r\n        const typeDaily = dataTypesDaily[i];\r\n        const type = plotTotal ? typeTotal : typeDaily;\r\n\r\n        const filteredTimeseries = timeseries.filter((d) => !isNaN(d[type]));\r\n        const color = colors[i];\r\n        const yScale = yScales[i];\r\n\r\n        /* X axis */\r\n        svg\r\n          .select('.x-axis')\r\n          .style('transform', `translateY(${chartBottom}px)`)\r\n          .transition(t)\r\n          .call(xAxis);\r\n        svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\r\n        /* Y axis */\r\n        svg\r\n          .select('.y-axis')\r\n          .style('transform', `translateX(${chartRight}px)`)\r\n          .transition(t)\r\n          .call(yAxis, yScale);\r\n\r\n        /* Path dots */\r\n        svg\r\n          .selectAll('.dot')\r\n          .data(filteredTimeseries, (d) => d.date)\r\n          .join((enter) =>\r\n            enter\r\n              .append('circle')\r\n              .attr('cy', chartBottom)\r\n              .attr('cx', (d) => xScale(d.date))\r\n          )\r\n          .attr('class', 'dot')\r\n          .attr('fill', color)\r\n          .attr('stroke', color)\r\n          .attr('r', 2)\r\n          .transition(t)\r\n          .attr('cx', (d) => xScale(d.date))\r\n          .attr('cy', (d) => yScale(d[type]));\r\n\r\n        if (!isNaN(timeseries[T - 1][type]))\r\n          focus[i]\r\n            .transition(t)\r\n            .attr('cx', (d) => xScale(d.date))\r\n            .attr('cy', (d) => yScale(d[type]))\r\n            .attr('opacity', 1);\r\n        else focus[i].transition(t).attr('opacity', 0);\r\n\r\n        if (plotTotal) {\r\n          /* TOTAL TRENDS */\r\n          svg.selectAll('.stem').remove();\r\n          const path = svg\r\n            .selectAll('.trend')\r\n            .data([[...filteredTimeseries].reverse()])\r\n            .join('path')\r\n            .attr('class', 'trend')\r\n            .attr('fill', 'none')\r\n            .attr('stroke', color + '99')\r\n            .attr('stroke-width', 4);\r\n          // HACK\r\n          // Path interpolation is non-trivial. Ideally, a custom path tween\r\n          // function should be defined which takes care that old path dots\r\n          // transition synchronously along with the path transition. This hack\r\n          // simulates that behaviour.\r\n          if (path.attr('d')) {\r\n            const n = path.node().getTotalLength();\r\n            const p = path.node().getPointAtLength(n);\r\n            // Append points at end of path for better interpolation\r\n            path.attr(\r\n              'd',\r\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\r\n            );\r\n          }\r\n          path\r\n            .transition(t)\r\n            .attr('opacity', plotTotal ? 1 : 0)\r\n            .attr(\r\n              'd',\r\n              d3\r\n                .line()\r\n                .x((d) => xScale(d.date))\r\n                .y((d) => yScale(d[typeTotal]))\r\n                .curve(d3.curveMonotoneX)\r\n            );\r\n        } else {\r\n          /* DAILY TRENDS */\r\n          svg.selectAll('.trend').remove();\r\n          svg\r\n            .selectAll('.stem')\r\n            .data(filteredTimeseries, (d) => d.date)\r\n            .join((enter) =>\r\n              enter\r\n                .append('line')\r\n                .attr('x1', (d) => xScale(d.date))\r\n                .attr('y1', chartBottom)\r\n                .attr('x2', (d) => xScale(d.date))\r\n                .attr('y2', chartBottom)\r\n            )\r\n            .attr('class', 'stem')\r\n            .style('stroke', color + '99')\r\n            .style('stroke-width', 4)\r\n            .transition(t)\r\n            .attr('x1', (d) => xScale(d.date))\r\n            .attr('y1', yScale(0))\r\n            .attr('x2', (d) => xScale(d.date))\r\n            .attr('y2', (d) => yScale(d[typeDaily]));\r\n        }\r\n\r\n        svg\r\n          .on('mousemove', mousemove)\r\n          .on('touchmove', mousemove)\r\n          .on('mouseout', mouseout)\r\n          .on('touchend', mouseout);\r\n      });\r\n    },\r\n    [chartType, dimensions, logMode, mode]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (timeseries.length > 1) {\r\n      graphData(timeseries);\r\n    }\r\n  }, [timeseries, graphData]);\r\n\r\n  const dateStr = datapoint.date ? formatTimeseriesDate(datapoint.date) : '';\r\n\r\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\r\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\r\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\r\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\r\n  const chartKey5 = chartType === 1 ? 'totaltested' : 'dailytested';\r\n\r\n  // Function for calculate increased/decreased count for each type of data\r\n  const currentStatusCount = (chartType) => {\r\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\r\n      return '';\r\n    const currentDiff =\r\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\r\n    const formatedDiff = formatNumber(currentDiff);\r\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"TimeSeries fadeInUp\" style={{animationDelay: '2.7s'}}>\r\n        <div className=\"svg-parent\" ref={wrapperRef}>\r\n          <div className=\"stats\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Confirmed')}</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\r\n              <h6>{currentStatusCount(chartKey1)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-blue\">\r\n          <div className=\"stats is-blue\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Active')}</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\r\n              <h6>{currentStatusCount(chartKey2)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-green\">\r\n          <div className=\"stats is-green\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Recovered')}</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\r\n              <h6>{currentStatusCount(chartKey3)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-gray\">\r\n          <div className=\"stats is-gray\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('Deceased')}</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey4])}</h2>\r\n              <h6>{currentStatusCount(chartKey4)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef4} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-purple\">\r\n          <div className=\"stats is-purple\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>\r\n              {t('Tested')} {stateCode === 'TT' ? testedToolTip : ''}\r\n            </h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey5])}</h2>\r\n              <h6>{currentStatusCount(chartKey5)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef5} preserveAspectRatio=\"xMidYMid meet\">\r\n            <g className=\"x-axis\" />\r\n            <g className=\"x-axis2\" />\r\n            <g className=\"y-axis\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pills\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLastDaysCount(Infinity)}\r\n          className={lastDaysCount === Infinity ? 'selected' : ''}\r\n        >\r\n          {t('Beginning')}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLastDaysCount(30)}\r\n          className={lastDaysCount === 30 ? 'selected' : ''}\r\n          aria-label=\"1 month\"\r\n        >\r\n          {`1 ${t('Month')}`}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLastDaysCount(14)}\r\n          className={lastDaysCount === 14 ? 'selected' : ''}\r\n          aria-label=\"14 days\"\r\n        >\r\n          {`2 ${t('Weeks')}`}\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default React.memo(TimeSeries, isEqual);\r\n","import TimeSeries from './timeseries';\r\n\r\nimport 'intersection-observer';\r\nimport Observer from '@researchgate/react-intersection-observer';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useState} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useLocalStorage} from 'react-use';\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (!equal(currProps.activeStateCode, prevProps.activeStateCode)) {\r\n    return false;\r\n  }\r\n  if (!equal(currProps.anchor, prevProps.anchor)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction TimeSeriesExplorer({\r\n  timeseries,\r\n  activeStateCode,\r\n  onHighlightState,\r\n  states,\r\n  anchor,\r\n  setAnchor,\r\n}) {\r\n  const [chartType, setChartType] = useLocalStorage('timeseriesChartType', 1);\r\n  const [isTimeseriesIntersecting, setIsTimeseriesIntersecting] = useState(\r\n    false\r\n  );\r\n\r\n  const [timeseriesMode, setTimeseriesMode] = useLocalStorage(\r\n    'timeseriesMode',\r\n    true\r\n  );\r\n  const [timeseriesLogMode, setTimeseriesLogMode] = useLocalStorage(\r\n    'timeseriesLogMode',\r\n    false\r\n  );\r\n  const {t} = useTranslation();\r\n\r\n  const options = {\r\n    rootMargin: '0px 0px 0px 0px',\r\n  };\r\n\r\n  return (\r\n    <Observer\r\n      options={options}\r\n      onChange={({isIntersecting}) =>\r\n        setIsTimeseriesIntersecting(isIntersecting)\r\n      }\r\n    >\r\n      <div\r\n        className={`TimeSeriesExplorer ${\r\n          anchor === 'timeseries' ? 'stickied' : ''\r\n        }`}\r\n        style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\r\n      >\r\n        <div\r\n          className=\"timeseries-header fadeInUp\"\r\n          style={{animationDelay: '2.5s'}}\r\n        >\r\n          {window.innerWidth > 769 && anchor !== undefined && (\r\n            <div\r\n              className={`anchor ${anchor === 'timeseries' ? 'stickied' : ''}`}\r\n              onClick={() => {\r\n                setAnchor(anchor === 'timeseries' ? null : 'timeseries');\r\n              }}\r\n            >\r\n              <Icon.Anchor />\r\n            </div>\r\n          )}\r\n\r\n          <h1>{t('Spread Trends')}</h1>\r\n          <div className=\"tabs\">\r\n            <div\r\n              className={`tab ${chartType === 1 ? 'focused' : ''}`}\r\n              onClick={() => {\r\n                setChartType(1);\r\n              }}\r\n            >\r\n              <h4>{t('Cumulative')}</h4>\r\n            </div>\r\n            <div\r\n              className={`tab ${chartType === 2 ? 'focused' : ''}`}\r\n              onClick={() => {\r\n                setChartType(2);\r\n              }}\r\n            >\r\n              <h4>{t('Daily')}</h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"scale-modes\">\r\n            <label className=\"main\">{t('Scale Modes')}</label>\r\n            <div className=\"timeseries-mode\">\r\n              <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\r\n              <input\r\n                id=\"timeseries-mode\"\r\n                type=\"checkbox\"\r\n                checked={timeseriesMode}\r\n                className=\"switch\"\r\n                aria-label={t('Checked by default to scale uniformly.')}\r\n                onChange={(event) => {\r\n                  setTimeseriesMode(!timeseriesMode);\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              className={`timeseries-logmode ${\r\n                chartType !== 1 ? 'disabled' : ''\r\n              }`}\r\n            >\r\n              <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\r\n              <input\r\n                id=\"timeseries-logmode\"\r\n                type=\"checkbox\"\r\n                checked={chartType === 1 && timeseriesLogMode}\r\n                className=\"switch\"\r\n                disabled={chartType !== 1}\r\n                onChange={(event) => {\r\n                  setTimeseriesLogMode(!timeseriesLogMode);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {states && (\r\n            <div className=\"trends-state-name\">\r\n              <select\r\n                value={activeStateCode}\r\n                onChange={({target}) => {\r\n                  const selectedState = target.selectedOptions[0].getAttribute(\r\n                    'statedata'\r\n                  );\r\n                  onHighlightState(JSON.parse(selectedState));\r\n                }}\r\n              >\r\n                {states.map((s) => {\r\n                  return (\r\n                    <option\r\n                      value={s.statecode}\r\n                      key={s.statecode}\r\n                      statedata={JSON.stringify(s)}\r\n                    >\r\n                      {s.statecode === 'TT' ? t('All States') : t(s.state)}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {timeseries && (\r\n          <TimeSeries\r\n            timeseriesProp={timeseries}\r\n            chartType={chartType}\r\n            mode={timeseriesMode}\r\n            logMode={timeseriesLogMode}\r\n            stateCode={activeStateCode}\r\n            isIntersecting={isTimeseriesIntersecting}\r\n          />\r\n        )}\r\n\r\n        <div className=\"alert\">\r\n          <Icon.AlertOctagon />\r\n          <div className=\"alert-right\">\r\n            {t('Tested chart is independent of uniform scaling')}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Observer>\r\n  );\r\n}\r\n\r\nexport default React.memo(TimeSeriesExplorer, isEqual);\r\n","import {\r\n  STATE_CODES_ARRAY,\r\n  STATE_CODES_REVERSE,\r\n  STATE_CODES,\r\n  ESSENTIALS_CATEGORIES,\r\n} from '../constants';\r\nimport {capitalize} from '../utils/commonfunctions';\r\n\r\nimport classnames from 'classnames';\r\nimport Bloodhound from 'corejs-typeahead';\r\nimport React, {useState, useEffect, useCallback, useRef} from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Link} from 'react-router-dom';\r\nimport {useDebounce, useMeasure} from 'react-use';\r\n\r\nconst engine = new Bloodhound({\r\n  initialize: true,\r\n  local: STATE_CODES_ARRAY,\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),\r\n});\r\n\r\nconst districtEngine = new Bloodhound({\r\n  initialize: true,\r\n  limit: 5,\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('district'),\r\n  indexRemote: true,\r\n  remote: {\r\n    url: 'https://api.covid19india.org/state_district_wise.json',\r\n    transform: function (response) {\r\n      const districts = [];\r\n      Object.keys(response).map((stateName) => {\r\n        const districtData = response[stateName].districtData;\r\n        Object.keys(districtData).map((districtName) => {\r\n          return districts.push({district: districtName, state: stateName});\r\n        });\r\n        return null;\r\n      });\r\n      return districts;\r\n    },\r\n  },\r\n});\r\n\r\nconst essentialsEngine = new Bloodhound({\r\n  initialize: true,\r\n  limit: 5,\r\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace(\r\n    'category',\r\n    'city',\r\n    'contact',\r\n    'descriptionandorserviceprovided',\r\n    'nameoftheorganisation',\r\n    'state'\r\n  ),\r\n  indexRemote: true,\r\n  remote: {\r\n    url: 'https://api.covid19india.org/resources/resources.json',\r\n    transform: function (response) {\r\n      return response.resources;\r\n    },\r\n  },\r\n});\r\n\r\n/* let focused = false;\r\nconst suggestions = [\r\n  'Karnataka',\r\n  'West Bengal',\r\n  'Alappuzha',\r\n  'Senior citizen support bangalore',\r\n  'Community Kitchen in Kerala',\r\n  'Groceries Chennai',\r\n];*/\r\n\r\nconst essentialSuggestions = [\r\n  'Testing Pune',\r\n  'Delhi Shelter',\r\n  'Community Kitchen in Kerala',\r\n  'Groceries Chennai',\r\n  'Senior citizen support bangalore',\r\n];\r\nconst locationSuggestions = [\r\n  'Mumbai',\r\n  'Karnataka',\r\n  'Chennai',\r\n  'Alappuzha',\r\n  'Ganjam',\r\n];\r\n\r\nfunction SearchLoader() {\r\n  const [svgElement, {width}] = useMeasure();\r\n\r\n  useEffect(() => {}, [width]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <span ref={svgElement} style={{width: '100%'}} />\r\n      {width && (\r\n        <ContentLoader\r\n          speed={1.5}\r\n          width={width}\r\n          height={100}\r\n          viewBox={`0 0 ${width} 100`}\r\n          position=\"absolute\"\r\n        >\r\n          <rect x=\"10\" y=\"20\" rx=\"5\" ry=\"5\" width={width - 20} height=\"75\" />\r\n        </ContentLoader>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction Search({districtZones}) {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [expand, setExpand] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const searchInput = useRef(null);\r\n  const {t} = useTranslation();\r\n\r\n  const handleSearch = useCallback((searchInput) => {\r\n    const results = [];\r\n\r\n    const sync = (datums) => {\r\n      datums.map((result, index) => {\r\n        const stateObj = {\r\n          name: result.name,\r\n          type: 'state',\r\n          route: result.code,\r\n        };\r\n        results.push(stateObj);\r\n        return null;\r\n      });\r\n    };\r\n\r\n    const districtSync = (datums) => {\r\n      datums.slice(0, 3).map((result, index) => {\r\n        const districtObj = {\r\n          name: result.district,\r\n          type: 'district',\r\n          route: STATE_CODES_REVERSE[result.state],\r\n        };\r\n        results.push(districtObj);\r\n        return null;\r\n      });\r\n    };\r\n\r\n    const essentialsSync = (datums) => {\r\n      datums.slice(0, 5).map((result, index) => {\r\n        const essentialsObj = {\r\n          name: result.nameoftheorganisation,\r\n          type: 'essentials',\r\n          category: result.category,\r\n          website: result.contact,\r\n          description: result.descriptionandorserviceprovided,\r\n          city: result.city,\r\n          state: result.state,\r\n          contact: result.phonenumber,\r\n        };\r\n        results.push(essentialsObj);\r\n        return null;\r\n      });\r\n      setResults([...results]);\r\n    };\r\n\r\n    const essentialsAsync = (datums) => {\r\n      // to handle async remote call on initial launch\r\n      essentialsEngine.search(searchInput, essentialsSync);\r\n    };\r\n\r\n    engine.search(searchInput, sync);\r\n    districtEngine.search(searchInput, districtSync);\r\n    essentialsEngine.search(searchInput, essentialsSync, essentialsAsync);\r\n  }, []);\r\n\r\n  useDebounce(\r\n    () => {\r\n      if (searchValue) {\r\n        handleSearch(searchValue);\r\n      } else {\r\n        setResults([]);\r\n      }\r\n    },\r\n    100,\r\n    [searchValue]\r\n  );\r\n\r\n  function setNativeValue(element, value) {\r\n    const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\r\n    const prototype = Object.getPrototypeOf(element);\r\n    const prototypeValueSetter = Object.getOwnPropertyDescriptor(\r\n      prototype,\r\n      'value'\r\n    ).set;\r\n\r\n    if (valueSetter && valueSetter !== prototypeValueSetter) {\r\n      prototypeValueSetter.call(element, value);\r\n    } else {\r\n      valueSetter.call(element, value);\r\n    }\r\n  }\r\n\r\n  /* function fillPlaceholder(target, index, cursorPosition, callback) {\r\n    if (focused) {\r\n      target.textContent = '';\r\n      return true;\r\n    }\r\n    const text = t(suggestions[index]);\r\n    const placeholder = target.textContent;\r\n    target.classList.remove('disappear');\r\n    target.textContent = placeholder + text[cursorPosition];\r\n    if (cursorPosition < text.length - 1) {\r\n      setTimeout(function () {\r\n        fillPlaceholder(target, index, cursorPosition + 1, callback);\r\n      }, 200);\r\n      return true;\r\n    }\r\n    callback();\r\n  }\r\n\r\n  function clearPlaceholder(target, callback) {\r\n    const placeholder = target.textContent;\r\n    target.classList.add('disappear');\r\n    if (placeholder.length > 0) {\r\n      setTimeout(function () {\r\n        target.textContent = '';\r\n        clearPlaceholder(target, callback);\r\n      }, 1000);\r\n      return true;\r\n    }\r\n    callback();\r\n  }\r\n\r\n  function loopThroughSuggestions(target, index) {\r\n    if (focused) {\r\n      target.textContent = '';\r\n      return true;\r\n    }\r\n    fillPlaceholder(target, index, 0, function () {\r\n      setTimeout(function () {\r\n        clearPlaceholder(target, function () {\r\n          loopThroughSuggestions(target, (index + 1) % suggestions.length);\r\n        });\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  const targetInput = document.getElementById('search-placeholder');\r\n  if (targetInput) loopThroughSuggestions(targetInput, 0);*/\r\n\r\n  return (\r\n    <div className=\"Search\">\r\n      <label>{t('Search your city, resources, etc')}</label>\r\n      <div className=\"line\"></div>\r\n\r\n      <div className=\"search-input-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          value={searchValue}\r\n          ref={searchInput}\r\n          onFocus={(event) => {\r\n            setExpand(true);\r\n          }}\r\n          onBlur={() => {\r\n            setExpand(false);\r\n          }}\r\n          onChange={(event) => {\r\n            setSearchValue(event.target.value);\r\n          }}\r\n        />\r\n        <span id=\"search-placeholder\" className=\"search-placeholder\"></span>\r\n\r\n        <div className={`search-button`}>\r\n          <Icon.Search />\r\n        </div>\r\n\r\n        {searchValue.length > 0 && (\r\n          <div\r\n            className={`close-button`}\r\n            onClick={() => {\r\n              setSearchValue('');\r\n              setResults([]);\r\n            }}\r\n          >\r\n            <Icon.X />\r\n          </div>\r\n        )}\r\n\r\n        {!expand && searchValue.length === 0 && (\r\n          <div\r\n            className={`close-button custom`}\r\n            onClick={() => {\r\n              setSearchValue('');\r\n              setResults([]);\r\n            }}\r\n          >\r\n            <Icon.Heart />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {results.length < 1 && searchValue.length > 0 && <SearchLoader />}\r\n\r\n      {results.length > 0 && (\r\n        <div className=\"results\">\r\n          {results.map((result, index) => {\r\n            if (result.type === 'state' || result.type === 'district') {\r\n              return (\r\n                <Link key={index} to={`state/${result.route}`}>\r\n                  <div className=\"result\">\r\n                    <div className=\"result-left\">\r\n                      <div className=\"result-name\">\r\n                        {`${result.name}`}\r\n                        {result.type === 'district' &&\r\n                          `, ${STATE_CODES[result.route]}`}\r\n                      </div>\r\n                      <div\r\n                        className={classnames('result-zone', {\r\n                          [`is-${districtZones[STATE_CODES[result.route]][\r\n                            result.name\r\n                          ]?.zone.toLowerCase()}`]: true,\r\n                        })}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"result-type\">\r\n                      <span>{[result.route]}</span>\r\n                      <Icon.ArrowRightCircle size={14} />\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <a\r\n                  key={index}\r\n                  href={result.website || null}\r\n                  target=\"_noblank\"\r\n                  className=\"essential-result\"\r\n                >\r\n                  <div className=\"result-top\">\r\n                    <div className=\"result-top-left\">\r\n                      <div className=\"result-name\">{result.name}</div>\r\n                      <div className=\"result-location\">\r\n                        {result.city && `${result.city}, `}\r\n                        {result.state}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"result-category\">\r\n                      <div>\r\n                        {capitalize(ESSENTIALS_CATEGORIES[result.category])}\r\n                      </div>\r\n                      {result.website && <Icon.ExternalLink />}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"result-description\">{result.description}</div>\r\n                  <div className=\"result-contacts\">\r\n                    {result.contact.split('\\n').map((contact) => (\r\n                      <div key={contact} className=\"result-contact\">\r\n                        <Icon.Phone />\r\n                        <a href={`tel:${contact}`}>{contact}</a>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </a>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {expand && (\r\n        <React.Fragment>\r\n          <p\r\n            className=\"feature\"\r\n            onMouseDown={(event) => {\r\n              event.preventDefault();\r\n              setNativeValue(searchInput.current, 'Cyclone Amphan');\r\n              searchInput.current.dispatchEvent(\r\n                new Event('input', {bubbles: true})\r\n              );\r\n            }}\r\n          >\r\n            To those who are in states affected by Cyclone Amphan or have\r\n            family/friends there, click here to view helplines for assistance.\r\n          </p>\r\n          <div className=\"expanded\">\r\n            <div className=\"expanded-left\">\r\n              <h3>{t('Essentials')}</h3>\r\n              <div className=\"suggestions\">\r\n                {essentialSuggestions.map((suggestion, index) => (\r\n                  <div className=\"suggestion\" key={index}>\r\n                    <div>-</div>\r\n                    <h4\r\n                      onMouseDown={(event) => {\r\n                        event.preventDefault();\r\n                        setNativeValue(searchInput.current, suggestion);\r\n                        searchInput.current.dispatchEvent(\r\n                          new Event('input', {bubbles: true})\r\n                        );\r\n                      }}\r\n                    >\r\n                      {t(suggestion)}\r\n                    </h4>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"expanded-right\">\r\n              <h3>{t('Locations')}</h3>\r\n              <div className=\"suggestions\">\r\n                {locationSuggestions.map((suggestion, index) => (\r\n                  <div className=\"suggestion\" key={index}>\r\n                    <div>-</div>\r\n                    <h4\r\n                      onMouseDown={(event) => {\r\n                        event.preventDefault();\r\n                        setNativeValue(searchInput.current, suggestion);\r\n                        searchInput.current.dispatchEvent(\r\n                          new Event('input', {bubbles: true})\r\n                        );\r\n                      }}\r\n                    >\r\n                      {t(suggestion)}\r\n                    </h4>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Search);\r\n","import {STATE_ROW_STATISTICS, DISTRICT_ROW_STATISTICS} from '../constants';\r\nimport {\r\n  formatDate,\r\n  formatNumber,\r\n  formatLastUpdated,\r\n  capitalize,\r\n  abbreviate,\r\n} from '../utils/commonfunctions';\r\n\r\nimport classnames from 'classnames';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useState, useCallback, useMemo} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useHistory} from 'react-router-dom';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {createBreakpoint, useLocalStorage, useEffectOnce} from 'react-use';\r\n\r\nconst useBreakpoint = createBreakpoint({XL: 1280, L: 768, S: 350});\r\n\r\nfunction StateCell({state, statistic}) {\r\n  const ArrowUp = useMemo(() => <Icon.ArrowUp />, []);\r\n\r\n  return (\r\n    <td>\r\n      <span className={classnames('delta', `is-${statistic}`)}>\r\n        {state[`delta${statistic}`] > 0 && ArrowUp}\r\n        {state[`delta${statistic}`] > 0 && state[`delta${statistic}`]}\r\n      </span>\r\n      <span className=\"total\">\r\n        {state[statistic] === 0 ? '-' : formatNumber(state[statistic])}\r\n      </span>\r\n    </td>\r\n  );\r\n}\r\n\r\nfunction DistrictHeaderCell({handleSort, statistic, sortData}) {\r\n  const breakpoint = useBreakpoint();\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <td onClick={() => handleSort(statistic)}>\r\n      <div className=\"heading-content\">\r\n        <abbr\r\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\r\n          title={statistic}\r\n        >\r\n          {breakpoint === 'L'\r\n            ? statistic.slice(0)\r\n            : breakpoint === 'S'\r\n            ? capitalize(\r\n                abbreviate(statistic === 'deaths' ? 'deceased' : statistic)\r\n              )\r\n            : t(capitalize(statistic === 'deaths' ? 'deceased' : statistic))}\r\n        </abbr>\r\n        <div\r\n          style={{\r\n            display: sortData.sortColumn === statistic ? 'initial' : 'none',\r\n          }}\r\n        >\r\n          {sortData.isAscending ? (\r\n            <div className=\"arrow-up\" />\r\n          ) : (\r\n            <div className=\"arrow-down\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </td>\r\n  );\r\n}\r\n\r\nfunction PureDistrictCell({district, statistic}) {\r\n  return (\r\n    <td>\r\n      <span className={classnames('delta', `is-${statistic}`)}>\r\n        {district.delta[statistic] > 0 && <Icon.ArrowUp />}\r\n        {district.delta[statistic] > 0 && district.delta[statistic]}\r\n      </span>\r\n      <span className=\"total\">{formatNumber(district[statistic])}</span>\r\n    </td>\r\n  );\r\n}\r\n\r\nconst DistrictCell = React.memo(PureDistrictCell);\r\n\r\nconst isDistrictRowEqual = (prevProps, currProps) => {\r\n  if (equal(prevProps.regionHighlighted?.district, prevProps.district)) {\r\n    return false;\r\n  }\r\n  if (equal(currProps.regionHighlighted?.district, currProps.district)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction PureDistrictRow({\r\n  regionHighlighted,\r\n  district,\r\n  state,\r\n  zone,\r\n  onHighlightDistrict,\r\n  sortedDistricts,\r\n  districts,\r\n}) {\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <tr\r\n      key={district.district}\r\n      className={classnames('district', {\r\n        'is-highlighted': regionHighlighted?.district === district,\r\n      })}\r\n      onMouseEnter={() => onHighlightDistrict(district, state)}\r\n    >\r\n      <td className={classnames(`is-${zone?.zone}`)}>\r\n        <div className=\"title-chevron\">\r\n          <span className=\"title-icon\">\r\n            {t(district)}\r\n            <span\r\n              data-for=\"district\"\r\n              data-tip={[[sortedDistricts[district].notes]]}\r\n              data-event=\"touchstart mouseover\"\r\n              data-event-off=\"mouseleave\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              {sortedDistricts[district].notes && <Icon.Info />}\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </td>\r\n\r\n      {DISTRICT_ROW_STATISTICS.map((statistic) => (\r\n        <DistrictCell\r\n          key={statistic}\r\n          district={districts[district]}\r\n          statistic={statistic}\r\n        />\r\n      ))}\r\n    </tr>\r\n  );\r\n}\r\n\r\nconst DistrictRow = React.memo(PureDistrictRow, isDistrictRowEqual);\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (!equal(prevProps.state.state, currProps.state.state)) {\r\n    return false;\r\n  }\r\n  if (\r\n    !equal(\r\n      prevProps.regionHighlighted?.state,\r\n      currProps.regionHighlighted?.state\r\n    )\r\n  ) {\r\n    return false;\r\n  }\r\n  if (\r\n    !equal(\r\n      prevProps.regionHighlighted?.district,\r\n      currProps.regionHighlighted?.district\r\n    )\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction Row({\r\n  index,\r\n  state,\r\n  districts,\r\n  zones,\r\n  regionHighlighted,\r\n  onHighlightState,\r\n  onHighlightDistrict,\r\n}) {\r\n  const [sortedDistricts, setSortedDistricts] = useState(districts);\r\n  const [showDistricts, setShowDistricts] = useState(false);\r\n  const [sortData, setSortData] = useLocalStorage('districtSortData', {\r\n    sortColumn: 'confirmed',\r\n    isAscending: false,\r\n  });\r\n\r\n  const history = useHistory();\r\n  const {t} = useTranslation();\r\n\r\n  const Chevron = useMemo(\r\n    () => (\r\n      <span\r\n        className={classnames(\r\n          'dropdown',\r\n          {rotateRightDown: showDistricts},\r\n          {rotateDownRight: !showDistricts}\r\n        )}\r\n      >\r\n        <Icon.ChevronDown />\r\n      </span>\r\n    ),\r\n    [showDistricts]\r\n  );\r\n\r\n  const _onHighlightState = useCallback(\r\n    (state) => {\r\n      if (!equal(state.state, regionHighlighted?.state)) {\r\n        onHighlightState(state);\r\n      }\r\n    },\r\n    [onHighlightState, regionHighlighted]\r\n  );\r\n\r\n  const doSort = useCallback(\r\n    (sortData) => {\r\n      if (!sortedDistricts) return null;\r\n      const sorted = {};\r\n      Object.keys(sortedDistricts)\r\n        .sort((district1, district2) => {\r\n          if (sortData.sortColumn !== 'district') {\r\n            return sortData.isAscending\r\n              ? parseInt(sortedDistricts[district1][sortData.sortColumn]) -\r\n                  parseInt(sortedDistricts[district2][sortData.sortColumn])\r\n              : parseInt(sortedDistricts[district2][sortData.sortColumn]) -\r\n                  parseInt(sortedDistricts[district1][sortData.sortColumn]);\r\n          } else {\r\n            return sortData.isAscending\r\n              ? district1.localeCompare(district2)\r\n              : district2.localeCompare(district1);\r\n          }\r\n        })\r\n        .forEach((key) => {\r\n          sorted[key] = sortedDistricts[key];\r\n        });\r\n      setSortedDistricts(sorted);\r\n    },\r\n    [sortedDistricts]\r\n  );\r\n\r\n  const handleSort = useCallback(\r\n    (statistic) => {\r\n      const newSortData = {\r\n        isAscending: !sortData.isAscending,\r\n        sortColumn: statistic,\r\n      };\r\n      doSort(newSortData);\r\n      setSortData(Object.assign({}, sortData, newSortData));\r\n    },\r\n    [doSort, setSortData, sortData]\r\n  );\r\n\r\n  useEffectOnce(() => {\r\n    if (state.statecode !== 'TT') doSort(sortData);\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tr\r\n        className={classnames(\r\n          'state',\r\n          {'is-total': state.statecode === 'TT'},\r\n          {'is-highlighted': regionHighlighted?.state === state.state},\r\n          {'is-odd': index % 2 === 0}\r\n        )}\r\n        onMouseEnter={() => _onHighlightState(state)}\r\n        onClick={\r\n          state.statecode !== 'TT'\r\n            ? () => {\r\n                setShowDistricts(!showDistricts);\r\n              }\r\n            : null\r\n        }\r\n      >\r\n        <td>\r\n          <div className=\"title-chevron\">\r\n            {state.statecode !== 'TT' && Chevron}\r\n            <span className=\"title-icon\">\r\n              {t(state.state)}\r\n\r\n              <span\r\n                data-tip={[state.statenotes]}\r\n                data-event=\"touchstart mouseover\"\r\n                data-event-off=\"mouseleave\"\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                {state.statenotes && <Icon.Info />}\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </td>\r\n\r\n        {STATE_ROW_STATISTICS.map((statistic, index) => (\r\n          <StateCell key={index} state={state} statistic={statistic} />\r\n        ))}\r\n      </tr>\r\n\r\n      {showDistricts && (\r\n        <React.Fragment>\r\n          <tr className=\"is-spacer\">\r\n            <td colSpan={5}>\r\n              <p />\r\n            </td>\r\n          </tr>\r\n\r\n          <tr className={'state-last-update'}>\r\n            <td colSpan={3} style={{paddingBottom: 0}}>\r\n              <p className=\"spacer\"></p>\r\n              <p>\r\n                {isNaN(Date.parse(formatDate(state.lastupdatedtime)))\r\n                  ? ''\r\n                  : `${t('Last updated')} ${formatLastUpdated(\r\n                      state.lastupdatedtime\r\n                    )} ${t('ago')}`}\r\n              </p>\r\n              {sortedDistricts?.Unknown && (\r\n                <div className=\"disclaimer\">\r\n                  <Icon.AlertCircle />\r\n                  {t('District-wise numbers are under reconciliation')}\r\n                </div>\r\n              )}\r\n            </td>\r\n            {state.state !== 'State Unassigned' && (\r\n              <td\r\n                align=\"center\"\r\n                className=\"state-page-link\"\r\n                colSpan={2}\r\n                onClick={() => {\r\n                  history.push(`state/${state.statecode}`);\r\n                }}\r\n              >\r\n                {t('See more details on {{state}}', {state: t(state.state)})}\r\n              </td>\r\n            )}\r\n          </tr>\r\n\r\n          <tr className={classnames('district-heading')}>\r\n            <td onClick={() => handleSort('district')}>\r\n              <div className=\"heading-content\">\r\n                <abbr title=\"District\">{t('District')}</abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'district' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </td>\r\n\r\n            {DISTRICT_ROW_STATISTICS.map((statistic, index) => (\r\n              <DistrictHeaderCell\r\n                key={index}\r\n                handleSort={handleSort}\r\n                statistic={statistic}\r\n                sortData={sortData}\r\n              />\r\n            ))}\r\n          </tr>\r\n        </React.Fragment>\r\n      )}\r\n\r\n      {showDistricts &&\r\n        Object.keys(sortedDistricts).map((district, index) => (\r\n          <DistrictRow\r\n            key={district}\r\n            state={state}\r\n            district={district}\r\n            districts={districts}\r\n            zone={zones?.[district]}\r\n            sortedDistricts={sortedDistricts}\r\n            regionHighlighted={regionHighlighted}\r\n            onHighlightDistrict={onHighlightDistrict}\r\n          />\r\n        ))}\r\n\r\n      {showDistricts && (\r\n        <tr className=\"is-spacer\">\r\n          <td colSpan={5}>\r\n            <p />\r\n            <ReactTooltip\r\n              id=\"district\"\r\n              place=\"right\"\r\n              type=\"dark\"\r\n              effect=\"solid\"\r\n              multiline={true}\r\n              scrollHide={true}\r\n              globalEventOff=\"click\"\r\n            />\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default React.memo(Row, isEqual);\r\n","import Row from './row';\r\n\r\nimport {STATE_ROW_STATISTICS} from '../constants';\r\nimport {capitalize, abbreviate} from '../utils/commonfunctions';\r\n\r\nimport classnames from 'classnames';\r\nimport equal from 'fast-deep-equal';\r\nimport React, {useState, useMemo, useCallback} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Link} from 'react-router-dom';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {createBreakpoint, useLocalStorage, useEffectOnce} from 'react-use';\r\n\r\nconst useBreakpoint = createBreakpoint({XL: 1280, L: 768, S: 350});\r\n\r\nfunction StateHeaderCell({handleSort, sortData, statistic}) {\r\n  const breakpoint = useBreakpoint();\r\n  const {t} = useTranslation();\r\n\r\n  return (\r\n    <th onClick={() => handleSort(statistic)}>\r\n      <div className=\"heading-content\">\r\n        <abbr\r\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\r\n          title={statistic}\r\n        >\r\n          {breakpoint === 'L'\r\n            ? statistic.slice(0)\r\n            : breakpoint === 'S'\r\n            ? capitalize(\r\n                abbreviate(statistic === 'deaths' ? 'deceased' : statistic)\r\n              )\r\n            : t(capitalize(statistic === 'deaths' ? 'deceased' : statistic))}\r\n        </abbr>\r\n        <div\r\n          style={{\r\n            display: sortData.sortColumn === statistic ? 'initial' : 'none',\r\n          }}\r\n        >\r\n          <div\r\n            className={classnames(\r\n              {'arrow-up': sortData.isAscending},\r\n              {'arrow-down': !sortData.isAscending}\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </th>\r\n  );\r\n}\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  return equal(prevProps.regionHighlighted, currProps.regionHighlighted);\r\n};\r\n\r\nfunction Table({\r\n  states,\r\n  districts,\r\n  zones,\r\n  regionHighlighted,\r\n  onHighlightState,\r\n  onHighlightDistrict,\r\n}) {\r\n  const [sortData, setSortData] = useLocalStorage('sortData', {\r\n    sortColumn: 'confirmed',\r\n    isAscending: false,\r\n  });\r\n\r\n  const {t} = useTranslation();\r\n\r\n  const [sortedStates, setSortedStates] = useState(\r\n    states.filter((state) => state.statecode !== 'TT')\r\n  );\r\n\r\n  const FineprintTop = useMemo(\r\n    () => (\r\n      <React.Fragment>\r\n        <h5\r\n          className=\"table-fineprint fadeInUp\"\r\n          style={{animationDelay: '1.5s'}}\r\n        >\r\n          {t('Compiled from State Govt. numbers')},{' '}\r\n          <Link to=\"/about\" style={{color: '#6c757d'}}>\r\n            {t('know more')}!\r\n          </Link>\r\n        </h5>\r\n        <h5\r\n          className=\"table-fineprint fadeInUp\"\r\n          style={{animationDelay: '1.5s'}}\r\n        >\r\n          {t('District zones as published by MoHFW')}\r\n          {', '}\r\n          <a\r\n            href=\"https://www.facebook.com/airnewsalerts/photos/a.262571017217636/1710062729135117/?type=3&theater\"\r\n            style={{color: '#6c757d'}}\r\n          >\r\n            {t('source')}\r\n          </a>\r\n        </h5>\r\n      </React.Fragment>\r\n    ),\r\n    [t]\r\n  );\r\n\r\n  const FineprintBottom = useMemo(\r\n    () => (\r\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\r\n        {states.slice(1).filter((s) => s && s.confirmed > 0).length} States/UTS\r\n        Affected\r\n      </h5>\r\n    ),\r\n    [states]\r\n  );\r\n\r\n  const doSort = useCallback(\r\n    (sortData) => {\r\n      const newSortedStates = [...sortedStates].sort((x, y) => {\r\n        if (sortData.sortColumn !== 'state') {\r\n          return sortData.isAscending\r\n            ? parseInt(x[sortData.sortColumn]) -\r\n                parseInt(y[sortData.sortColumn])\r\n            : parseInt(y[sortData.sortColumn]) -\r\n                parseInt(x[sortData.sortColumn]);\r\n        } else {\r\n          return sortData.isAscending\r\n            ? x[sortData.sortColumn].localeCompare(y[sortData.sortColumn])\r\n            : y[sortData.sortColumn].localeCompare(x[sortData.sortColumn]);\r\n        }\r\n      });\r\n      setSortedStates(newSortedStates);\r\n    },\r\n    [sortedStates]\r\n  );\r\n\r\n  const handleSort = useCallback(\r\n    (statistic) => {\r\n      const newSortData = {\r\n        isAscending: !sortData.isAscending,\r\n        sortColumn: statistic,\r\n      };\r\n      doSort(newSortData);\r\n      setSortData(Object.assign({}, sortData, newSortData));\r\n    },\r\n    [doSort, setSortData, sortData]\r\n  );\r\n\r\n  useEffectOnce(() => {\r\n    doSort(sortData);\r\n  });\r\n\r\n  if (states.length > 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <ReactTooltip\r\n          place=\"right\"\r\n          type=\"dark\"\r\n          effect=\"solid\"\r\n          multiline={true}\r\n          globalEventOff=\"click\"\r\n        />\r\n\r\n        {FineprintTop}\r\n\r\n        <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"state-heading\" onClick={() => handleSort('state')}>\r\n                <div className=\"heading-content\">\r\n                  <abbr title=\"State\">{t('State/UT')}</abbr>\r\n                  <div\r\n                    style={{\r\n                      display:\r\n                        sortData.sortColumn === 'state' ? 'initial' : 'none',\r\n                    }}\r\n                  >\r\n                    <div\r\n                      className={classnames(\r\n                        {'arrow-up': sortData.isAscending},\r\n                        {'arrow-down': !sortData.isAscending}\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </th>\r\n              {STATE_ROW_STATISTICS.map((statistic, index) => (\r\n                <StateHeaderCell\r\n                  key={index}\r\n                  handleSort={handleSort}\r\n                  sortData={sortData}\r\n                  statistic={statistic}\r\n                />\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n\r\n          {states && (\r\n            <tbody>\r\n              {sortedStates.map((state, index) => {\r\n                if (state.confirmed > 0 && state.statecode !== 'TT') {\r\n                  return (\r\n                    <Row\r\n                      key={state.statecode}\r\n                      state={state}\r\n                      districts={districts[state.state]?.districtData}\r\n                      zones={zones[state.state]}\r\n                      regionHighlighted={\r\n                        equal(regionHighlighted?.state, state.state)\r\n                          ? regionHighlighted\r\n                          : null\r\n                      }\r\n                      onHighlightState={onHighlightState}\r\n                      onHighlightDistrict={onHighlightDistrict}\r\n                    />\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </tbody>\r\n          )}\r\n\r\n          {states && (\r\n            <tbody>\r\n              <Row\r\n                key={0}\r\n                state={states[0]}\r\n                onHighlightState={onHighlightState}\r\n              />\r\n            </tbody>\r\n          )}\r\n        </table>\r\n        {states && FineprintBottom}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return <div style={{height: '50rem'}}></div>;\r\n  }\r\n}\r\n\r\nexport default React.memo(Table, isEqual);\r\n","import axios from 'axios';\r\nimport {formatDistance, format} from 'date-fns';\r\nimport React, {useState, useLayoutEffect} from 'react';\r\nimport {useEffectOnce} from 'react-use';\r\n\r\nconst newDate = new Date();\r\nlet currentDate = newDate;\r\n\r\nfunction Updates(props) {\r\n  const [updates, setUpdates] = useState([]);\r\n\r\n  useEffectOnce(() => {\r\n    axios\r\n      .get('https://api.covid19india.org/updatelog/log.json')\r\n      .then((response) => {\r\n        setUpdates(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n\r\n  // reset the currentDate after rendering is complete\r\n  // in case the currentDate was changed during addHeader\r\n  useLayoutEffect(() => {\r\n    currentDate = newDate;\r\n  });\r\n\r\n  return (\r\n    <div className=\"updates\">\r\n      <div className=\"updates-header\">\r\n        <h2>{format(currentDate, 'd MMM')}</h2>\r\n      </div>\r\n\r\n      {updates\r\n        .slice(-5)\r\n        .reverse()\r\n        .map(function (activity, index) {\r\n          activity.update = activity.update.replace(/\\n/g, '<br/>');\r\n          const activityDate = new Date(activity.timestamp * 1000);\r\n          const addHeader = () => {\r\n            currentDate = activityDate;\r\n\r\n            return (\r\n              <React.Fragment>\r\n                {index === 0 ? (\r\n                  <div className=\"update\">\r\n                    <h4>No updates yet!</h4>\r\n                  </div>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <div className=\"updates-header\">\r\n                  <h2>{format(activityDate, 'd MMM')}</h2>\r\n                </div>\r\n              </React.Fragment>\r\n            );\r\n          };\r\n\r\n          return (\r\n            <React.Fragment key={index}>\r\n              {activityDate.getDate() !== currentDate.getDate()\r\n                ? addHeader()\r\n                : ' '}\r\n              <div key={index} className=\"update\">\r\n                <h5>\r\n                  {formatDistance(\r\n                    new Date(activity.timestamp * 1000),\r\n                    new Date()\r\n                  ) + ' ago'}\r\n                </h5>\r\n                <h4\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: activity.update,\r\n                  }}\r\n                ></h4>\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Updates;\r\n","import Footer from './footer';\r\nimport Level from './level';\r\nimport MapExplorer from './mapexplorer';\r\nimport Minigraph from './minigraph';\r\nimport Search from './search';\r\nimport Table from './table';\r\nimport TimeSeriesExplorer from './timeseriesexplorer';\r\nimport Updates from './updates';\r\n\r\nimport {STATE_CODES_REVERSE} from '../constants';\r\nimport {\r\n  formatDate,\r\n  formatDateAbsolute,\r\n  mergeTimeseries,\r\n  preprocessTimeseries,\r\n  parseStateTimeseries,\r\n  parseStateTestData,\r\n  parseStateTestTimeseries,\r\n  parseTotalTestTimeseries,\r\n  parseDistrictZones,\r\n} from '../utils/commonfunctions';\r\n\r\nimport axios from 'axios';\r\nimport React, {useState, useCallback, useMemo} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {Helmet} from 'react-helmet';\r\nimport {useEffectOnce, useLocalStorage} from 'react-use';\r\n\r\nfunction Home(props) {\r\n  const [states, setStates] = useState(null);\r\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState(null);\r\n  const [districtZones, setDistrictZones] = useState(null);\r\n  const [stateTestData, setStateTestData] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n  const [timeseries, setTimeseries] = useState(null);\r\n  const [fetched, setFetched] = useState(false);\r\n  const [regionHighlighted, setRegionHighlighted] = useState({\r\n    state: 'Total',\r\n  });\r\n  const [showUpdates, setShowUpdates] = useState(false);\r\n  const [anchor, setAnchor] = useState(null);\r\n  const [mapOption, setMapOption] = useState('confirmed');\r\n\r\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage(\r\n    'lastViewedLog',\r\n    null\r\n  );\r\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\r\n\r\n  const Bell = useMemo(\r\n    () => (\r\n      <Icon.Bell\r\n        onClick={() => {\r\n          setShowUpdates(!showUpdates);\r\n          setNewUpdate(false);\r\n        }}\r\n      />\r\n    ),\r\n    [setNewUpdate, showUpdates]\r\n  );\r\n\r\n  const BellOff = useMemo(\r\n    () => (\r\n      <Icon.BellOff\r\n        onClick={() => {\r\n          setShowUpdates(!showUpdates);\r\n        }}\r\n      />\r\n    ),\r\n    [showUpdates]\r\n  );\r\n\r\n  useEffectOnce(() => {\r\n    getStates();\r\n  });\r\n\r\n  useEffectOnce(() => {\r\n    axios\r\n      .get('https://api.covid19india.org/updatelog/log.json')\r\n      .then((response) => {\r\n        const lastTimestamp = response.data\r\n          .slice()\r\n          .reverse()[0]\r\n          .timestamp.toString();\r\n        if (lastTimestamp !== lastViewedLog) {\r\n          setNewUpdate(true);\r\n          setLastViewedLog(lastTimestamp);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [\r\n        {data: statesDailyResponse},\r\n        {data: zonesResponse},\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/states_daily.json'),\r\n        axios.get('https://api.covid19india.org/zones.json'),\r\n      ]);\r\n\r\n      const [\r\n        {data},\r\n        {data: stateDistrictWiseResponse},\r\n        {data: stateTestData},\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\r\n        axios.get('https://api.covid19india.org/state_test_data.json'),\r\n      ]);\r\n\r\n      setStates(data.statewise);\r\n      setDistrictZones(parseDistrictZones(zonesResponse.zones));\r\n\r\n      const ts = parseStateTimeseries(statesDailyResponse);\r\n      ts['TT'] = preprocessTimeseries(data.cases_time_series);\r\n      // Testing data timeseries\r\n      const testTs = parseStateTestTimeseries(stateTestData.states_tested_data);\r\n      testTs['TT'] = parseTotalTestTimeseries(data.tested);\r\n      // Merge\r\n      const tsMerged = mergeTimeseries(ts, testTs);\r\n      setTimeseries(tsMerged);\r\n\r\n      setLastUpdated(data.statewise[0].lastupdatedtime);\r\n\r\n      const testData = parseStateTestData(stateTestData.states_tested_data);\r\n      const totalTest = data.tested[data.tested.length - 1];\r\n      testData['Total'] = {\r\n        source: totalTest.source,\r\n        totaltested: totalTest.totalsamplestested,\r\n        updatedon: totalTest.updatetimestamp.split(' ')[0],\r\n      };\r\n      setStateTestData(testData);\r\n\r\n      setStateDistrictWiseData(stateDistrictWiseResponse);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const onHighlightState = useCallback((state) => {\r\n    if (!state) return setRegionHighlighted(null);\r\n    setRegionHighlighted({state: state.state});\r\n  }, []);\r\n\r\n  const onHighlightDistrict = useCallback((district, state) => {\r\n    if (!state && !district) return setRegionHighlighted(null);\r\n    setRegionHighlighted({district, state: state.state});\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"Home\">\r\n        <Helmet>\r\n          <title>Coronavirus Outbreak in India - covid19india.org</title>\r\n          <meta\r\n            name=\"title\"\r\n            content=\"Coronavirus Outbreak in India: Latest Map and Case Count\"\r\n          />\r\n        </Helmet>\r\n\r\n        <div className=\"home-left\">\r\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\r\n            {fetched && <Search districtZones={districtZones} />}\r\n\r\n            <div className=\"actions\">\r\n              <h5>\r\n                {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                  ? ''\r\n                  : `${formatDateAbsolute(lastUpdated)} IST`}\r\n              </h5>\r\n              {fetched && !showUpdates && (\r\n                <div className=\"bell-icon\">\r\n                  {fetched && Bell}\r\n                  {newUpdate && <div className=\"indicator\"></div>}\r\n                </div>\r\n              )}\r\n              {fetched && showUpdates && BellOff}\r\n            </div>\r\n          </div>\r\n\r\n          {showUpdates && <Updates />}\r\n\r\n          {states && <Level data={states[0]} />}\r\n          {timeseries && <Minigraph timeseries={timeseries['TT']} />}\r\n          {stateDistrictWiseData && (\r\n            <Table\r\n              states={states}\r\n              summary={false}\r\n              districts={stateDistrictWiseData}\r\n              zones={districtZones}\r\n              regionHighlighted={regionHighlighted}\r\n              setRegionHighlighted={setRegionHighlighted}\r\n              onHighlightState={onHighlightState}\r\n              onHighlightDistrict={onHighlightDistrict}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"home-right\">\r\n          <React.Fragment>\r\n            {fetched && (\r\n              <MapExplorer\r\n                mapName={'India'}\r\n                states={states}\r\n                districts={stateDistrictWiseData}\r\n                zones={districtZones}\r\n                stateTestData={stateTestData}\r\n                regionHighlighted={regionHighlighted}\r\n                setRegionHighlighted={setRegionHighlighted}\r\n                anchor={anchor}\r\n                setAnchor={setAnchor}\r\n                mapOption={mapOption}\r\n                setMapOption={setMapOption}\r\n              />\r\n            )}\r\n\r\n            {timeseries && (\r\n              <TimeSeriesExplorer\r\n                timeseries={\r\n                  timeseries[\r\n                    STATE_CODES_REVERSE[regionHighlighted?.state] || 'TT'\r\n                  ]\r\n                }\r\n                activeStateCode={\r\n                  STATE_CODES_REVERSE[regionHighlighted?.state] || 'TT'\r\n                }\r\n                onHighlightState={onHighlightState}\r\n                states={states}\r\n                anchor={anchor}\r\n                setAnchor={setAnchor}\r\n              />\r\n            )}\r\n          </React.Fragment>\r\n        </div>\r\n      </div>\r\n      {fetched && <Footer />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}